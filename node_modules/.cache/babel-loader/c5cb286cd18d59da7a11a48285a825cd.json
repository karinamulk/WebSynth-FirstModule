{"ast":null,"code":"var _jsxFileName = \"/Users/karinamulkamanova/coding/WebSynth-FirstModule/app/javascript/prototypes/prototype_14/Container.jsx\";\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, \"prototype\", { writable: false }); return Constructor; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); Object.defineProperty(subClass, \"prototype\", { writable: false }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (typeof call === \"object\" || typeof call === \"function\")) { return call; } else if (call !== void 0) { throw new TypeError(\"Derived constructors may only return object or undefined\"); } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nimport * as Tone from 'tone';\nimport React, { Component } from 'react';\nimport * as bassSettings from './tunes/bass.js';\nimport * as melodySettings from './tunes/melody.js';\nimport * as drumsSettings from './tunes/drums.js';\nimport * as drumsSettings2 from './tunes/drums2.js';\nimport ToneSynth from './modules/ToneSynth.jsx';\nimport Channel from './modules/Channel.jsx';\nimport ChannelForSamplers from './modules/ChannelForSamplers.jsx';\nimport Chorus from './modules/Chorus.jsx';\nimport Delay from './modules/Delay.jsx';\nimport Distortion from './modules/Distortion.jsx';\nimport AutoFilter from './modules/AutoFilter.jsx';\nimport Tremolo from './modules/Tremolo.jsx';\nimport SC_Button from './components/SC_Button';\nimport SC_Slider from './components/SC_Slider';\nvar bassSynth;\nvar bassPingPongDelay;\nvar bassPhaser;\nvar bassTremolo;\nvar bassDistortion;\nvar bassAutoFilter;\nvar bassChannel;\nvar melodySynth;\nvar melodyChorus;\nvar melodyPingPongDelay;\nvar melodyChannel;\nvar melodyDistortion;\nvar samplerChannel;\nvar samplerChannel2;\n\nvar Container = /*#__PURE__*/function (_Component) {\n  _inherits(Container, _Component);\n\n  var _super = _createSuper(Container);\n\n  function Container(props) {\n    var _this;\n\n    _classCallCheck(this, Container);\n\n    _this = _super.call(this, props);\n\n    _this.handleStart = function () {\n      var _this$state = _this.state,\n          bassSettings = _this$state.bassSettings,\n          melodySettings = _this$state.melodySettings,\n          drumsSettings = _this$state.drumsSettings,\n          drumsSettings2 = _this$state.drumsSettings2; //\n      //\n\n      bassSynth = new Tone.Synth(bassSettings.synth);\n      bassPingPongDelay = new Tone.PingPongDelay(bassSettings.pingPongDelay);\n      bassAutoFilter = new Tone.AutoFilter(bassSettings.autoFilter).start();\n      bassTremolo = new Tone.Tremolo(bassSettings.tremolo);\n      bassDistortion = new Tone.Distortion(bassSettings.distortion);\n      bassChannel = new Tone.Channel(bassSettings.channel).toDestination();\n      bassSynth.chain(bassPingPongDelay, bassTremolo, bassDistortion, bassAutoFilter, bassChannel);\n      var bassPart = new Tone.Part(function (time, note) {\n        bassSynth.triggerAttackRelease(note.noteName, note.duration, time, note.velocity);\n      }, bassSettings.sequence.steps).start(0);\n      bassPart.loopEnd = bassSettings.sequence.duration;\n      bassPart.loop = true; //\n      //\n\n      melodySynth = new Tone.Synth(melodySettings.synth);\n      melodyChorus = new Tone.Chorus(melodySettings.chorus).start();\n      melodyPingPongDelay = new Tone.PingPongDelay(melodySettings.pingPongDelay);\n      melodyDistortion = new Tone.Distortion(melodySettings.distortion);\n      melodyChannel = new Tone.Channel(melodySettings.channel).toDestination();\n      melodySynth.chain(melodyChorus, melodyPingPongDelay, melodyDistortion, melodyChannel);\n      var melodyPart = new Tone.Part(function (time, note) {\n        melodySynth.triggerAttackRelease(note.noteName, note.duration, time, note.velocity);\n      }, melodySettings.sequence.steps).start(0);\n      melodyPart.loopEnd = melodySettings.sequence.duration;\n      melodyPart.loop = true; //\n      //\n\n      var sampler = new Tone.Sampler({\n        urls: {\n          A1: '00001-Linn-9000-BassDrumrum1.mp3',\n          A2: '00017-Linn-9000-Snare.mp3'\n        },\n        baseUrl: 'http://localhost:3000/samples/' // onload: () => {\n        //   sampler.triggerAttackRelease(['A1', 'A2', 'A1', 'A2'], 0.5)\n        // }\n\n      });\n      samplerChannel = new Tone.Channel(drumsSettings.channel).toDestination();\n      sampler.chain(samplerChannel);\n      var drumsPart = new Tone.Part(function (time, note) {\n        sampler.triggerAttackRelease(note.noteName, note.duration, time, note.velocity);\n      }, drumsSettings.sequence.steps).start(0);\n      drumsPart.loopEnd = drumsSettings.sequence.duration;\n      drumsPart.loop = true;\n      var sampler2 = new Tone.Sampler({\n        urls: {\n          A1: '00034-Tama-TS-206-Perc-Noise-Long-1.mp3',\n          // A2: '00033-Tama-TS-206-Kick-Short-1B.mp3'\n          // A2: '00040-Tama-TS-500-BassDrum1.mp3'\n          A2: '00047-Vermona-DRM1-MK3-BassDrum13.mp3'\n        },\n        baseUrl: 'http://localhost:3000/samples/' // onload: () => {\n        //   sampler.triggerAttackRelease(['A1', 'A2', 'A1', 'A2'], 0.5)\n        // }\n\n      });\n      samplerChannel2 = new Tone.Channel(drumsSettings2.channel).toDestination();\n      sampler2.chain(samplerChannel2);\n      var drumsPart2 = new Tone.Part(function (time, note) {\n        sampler2.triggerAttackRelease(note.noteName, note.duration, time, note.velocity);\n      }, drumsSettings2.sequence.steps).start(0);\n      drumsPart2.loopEnd = drumsSettings2.sequence.duration;\n      drumsPart2.loop = true;\n      Tone.Transport.start();\n      var className = \"visible\";\n      var className2 = \"nonvisible\";\n      document.getElementsByClassName(\"bassblock\")[0].classList.add(className);\n      document.getElementsByClassName(\"melodyblock\")[0].classList.add(className);\n      document.getElementsByClassName(\"drumsblock\")[0].classList.add(className);\n      document.getElementsByClassName(\"first\")[0].classList.add(className);\n      document.getElementsByClassName(\"welcome\")[0].classList.add(className2);\n    };\n\n    _this.handleBassValueChange = function (property, value) {\n      var bassSettings = _this.state.bassSettings;\n\n      if (property === 'synthType') {\n        bassSynth.oscillator.type = value;\n        bassSettings.synth.oscillator.type = value;\n      } else if (property === 'synthEnvelopeAttack') {\n        bassSynth.envelope.attack = value;\n        bassSettings.synth.envelope.attack = value;\n      } else if (property === 'synthEnvelopeDecay') {\n        bassSynth.envelope.decay = value;\n        bassSettings.synth.envelope.decay = value;\n      } else if (property === 'synthEnvelopeSustain') {\n        bassSynth.envelope.sustain = value;\n        bassSettings.synth.envelope.sustain = value;\n      } else if (property === 'synthEnvelopeRelease') {\n        bassSynth.envelope.release = value;\n        bassSettings.synth.envelope.release = value;\n      } else if (property === 'synthVolume') {\n        bassSynth.volume.value = value;\n        bassSettings.synth.volume = value;\n      } else if (property === 'synthDetune') {\n        bassSynth.detune.value = value;\n        bassSettings.synth.detune = value;\n      } else if (property === 'synthPortamento') {\n        bassSynth.portamento = value;\n        bassSettings.synth.portamento = value;\n      } else if (property === 'synthPhase') {\n        bassSynth.oscillator.phase = value;\n        bassSettings.synth.oscillator.phase = value;\n      } else if (property === 'synthHarmonicity') {\n        bassSynth.oscillator.harmonicity.value = value;\n        bassSettings.synth.oscillator.harmonicity = value;\n      } else if (property === 'pingPongDelayWet') {\n        bassPingPongDelay.wet.value = value;\n        bassSettings.pingPongDelay.wet = value;\n      } else if (property === 'pingPongDelayDelayTime') {\n        bassPingPongDelay.delayTime.value = value;\n        bassSettings.pingPongDelay.delayTime = value;\n      } else if (property === 'pingPongDelayDelayMaxDelayTime') {\n        bassPingPongDelay.maxDelayTime = value;\n        bassSettings.pingPongDelay.maxDelayTime = value;\n      } else if (property === 'autoFilterWet') {\n        bassAutoFilter.wet.value = value;\n        bassSettings.autoFilter.wet = value;\n      } else if (property === 'autoFilterFrequency') {\n        bassAutoFilter.frequency.value = value;\n        bassSettings.autoFilter.frequency = value;\n      } else if (property === 'autoFilterDepth') {\n        bassAutoFilter.depth.value = value;\n        bassSettings.autoFilter.depth = value;\n      } else if (property === 'autoFilterBaseFrequency') {\n        bassAutoFilter.baseFrequency = value;\n        bassSettings.autoFilter.baseFrequency = value;\n      } else if (property === 'autoFilterType') {\n        bassAutoFilter.type = value;\n        bassSettings.autoFilter.type = value;\n      } else if (property === 'distortionWet') {\n        bassDistortion.wet.value = value;\n        bassSettings.distortion.wet = value;\n      } else if (property === 'distortionDistortion') {\n        bassDistortion.distortion = value;\n        bassSettings.distortion.distortion = value;\n      } else if (property === 'tremoloWet') {\n        bassTremolo.wet.value = value;\n        bassSettings.tremolo.wet = value;\n      } else if (property === 'tremoloFrequency') {\n        bassTremolo.frequency.value = value;\n        bassSettings.tremolo.frequency = value;\n      } else if (property === 'tremoloDepth') {\n        bassTremolo.depth.value = value;\n        bassSettings.tremolo.depth = value;\n      } else if (property === 'tremoloSpread') {\n        bassTremolo.spread = value;\n        bassSettings.tremolo.spread = value;\n      } else if (property === 'channelVolume') {\n        bassChannel.volume.value = value;\n        bassSettings.channel.volume = value;\n      } else if (property === 'channelMute') {\n        bassChannel.mute = value;\n        bassSettings.channel.mute = value;\n      } else if (property === 'channelPan') {\n        bassChannel.pan.value = value;\n        bassSettings.channel.pan = value;\n      }\n\n      _this.setState({\n        bassSettings: bassSettings\n      });\n    };\n\n    _this.handleMelodyValueChange = function (property, value) {\n      var melodySettings = _this.state.melodySettings;\n\n      if (property === 'synthType') {\n        melodySynth.oscillator.type = value;\n        melodySettings.synth.oscillator.type = value;\n      } else if (property === 'synthEnvelopeAttack') {\n        melodySynth.envelope.attack = value;\n        melodySettings.synth.envelope.attack = value;\n      } else if (property === 'synthEnvelopeDecay') {\n        melodySynth.envelope.decay = value;\n        melodySettings.synth.envelope.decay = value;\n      } else if (property === 'synthEnvelopeSustain') {\n        melodySynth.envelope.sustain = value;\n        melodySettings.synth.envelope.sustain = value;\n      } else if (property === 'synthEnvelopeRelease') {\n        melodySynth.envelope.release = value;\n        melodySettings.synth.envelope.release = value;\n      } else if (property === 'synthVolume') {\n        melodySynth.volume.value = value;\n        melodySettings.synth.volume = value;\n      } else if (property === 'synthDetune') {\n        melodySynth.detune.value = value;\n        melodySettings.synth.detune = value;\n      } else if (property === 'synthPortamento') {\n        melodySynth.portamento = value;\n        melodySettings.synth.portamento = value;\n      } else if (property === 'synthPhase') {\n        melodySynth.oscillator.phase = value;\n        melodySettings.synth.oscillator.phase = value;\n      } else if (property === 'synthHarmonicity') {\n        melodySynth.oscillator.harmonicity.value = value;\n        melodySettings.synth.oscillator.harmonicity = value;\n      } else if (property === 'pingPongDelayWet') {\n        melodyPingPongDelay.wet.value = value;\n        melodySettings.pingPongDelay.wet = value;\n      } else if (property === 'pingPongDelayDelayTime') {\n        melodyPingPongDelay.delayTime.value = value;\n        melodySettings.pingPongDelay.delayTime = value;\n      } else if (property === 'pingPongDelayDelayMaxDelayTime') {\n        melodyPingPongDelay.maxDelayTime = value;\n        melodySettings.pingPongDelay.maxDelayTime = value;\n      } else if (property === 'chorusWet') {\n        melodyChorus.wet.value = value;\n        melodySettings.chorus.wet = value;\n      } else if (property === 'chorusFrequency') {\n        melodyChorus.frequency.value = value;\n        melodySettings.chorus.frequency = value;\n      } else if (property === 'chorusDelayTime') {\n        melodyChorus.delayTime = value;\n        melodySettings.chorus.delayTime = value;\n      } else if (property === 'chorusSpread') {\n        melodyChorus.spread = value;\n        melodySettings.chorus.spread = value;\n      } else if (property === 'chorusType') {\n        melodyChorus.type = value;\n        melodySettings.chorus.type = value;\n      } else if (property === 'distortionWet') {\n        melodyDistortion.wet.value = value;\n        melodySettings.distortion.wet = value;\n      } else if (property === 'distortionDistortion') {\n        melodyDistortion.distortion = value;\n        melodySettings.distortion.distortion = value;\n      } else if (property === 'channelVolume') {\n        melodyChannel.volume.value = value;\n        melodySettings.channel.volume = value;\n      } else if (property === 'channelMute') {\n        melodyChannel.mute = value;\n        melodySettings.channel.mute = value;\n      } else if (property === 'channelPan') {\n        melodyChannel.pan.value = value;\n        melodySettings.channel.pan = value;\n      }\n\n      _this.setState({\n        melodySettings: melodySettings\n      });\n    };\n\n    _this.handleDrumsValueChange = function (property, value) {\n      var drumsSettings = _this.state.drumsSettings;\n\n      if (property === 'channelVolume') {\n        samplerChannel.volume.value = value;\n        drumsSettings.channel.volume = value;\n      } else if (property === 'channelMute') {\n        samplerChannel.mute = value;\n        drumsSettings.channel.mute = value;\n      }\n\n      _this.setState({\n        drumsSettings: drumsSettings\n      });\n    };\n\n    _this.handleDrums2ValueChange = function (property, value) {\n      var drumsSettings2 = _this.state.drumsSettings2;\n\n      if (property === 'channelVolume') {\n        samplerChannel2.volume.value = value;\n        drumsSettings2.channel.volume = value;\n      } else if (property === 'channelMute') {\n        samplerChannel2.mute = value;\n        drumsSettings2.channel.mute = value;\n      }\n\n      _this.setState({\n        drumsSettings2: drumsSettings2\n      });\n    };\n\n    _this.state = {\n      bassSettings: bassSettings,\n      melodySettings: melodySettings,\n      drumsSettings: drumsSettings,\n      drumsSettings2: drumsSettings2\n    };\n    return _this;\n  }\n\n  _createClass(Container, [{\n    key: \"render\",\n    value: function render() {\n      var _this$state2 = this.state,\n          bassSettings = _this$state2.bassSettings,\n          melodySettings = _this$state2.melodySettings,\n          drumsSettings = _this$state2.drumsSettings,\n          drumsSettings2 = _this$state2.drumsSettings2;\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"Container\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 392,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"welcome\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 393,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(SC_Button, {\n        text: \"Click me to start Road Trip\",\n        handleClick: this.handleStart,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 394,\n          columnNumber: 11\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"first\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 400,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"firstblack\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 401,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"h2\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 402,\n          columnNumber: 13\n        }\n      }, \"Remember the pop music radio your parents listened to on road trips\"), /*#__PURE__*/React.createElement(\"h1\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 403,\n          columnNumber: 13\n        }\n      }, \"Road Trip Synthesizer\"))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"block melodyblock\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 409,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"blocktitle\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 410,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"h1\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 411,\n          columnNumber: 13\n        }\n      }, \"Main Melody\")), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"column\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 414,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(ToneSynth, {\n        settings: melodySettings,\n        handleValueChange: this.handleMelodyValueChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 415,\n          columnNumber: 13\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"column\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 420,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(Chorus, {\n        settings: melodySettings,\n        handleValueChange: this.handleMelodyValueChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 421,\n          columnNumber: 13\n        }\n      }), /*#__PURE__*/React.createElement(Delay, {\n        settings: melodySettings,\n        handleValueChange: this.handleMelodyValueChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 425,\n          columnNumber: 13\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"column\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 430,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(Channel, {\n        settings: melodySettings,\n        handleValueChange: this.handleMelodyValueChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 431,\n          columnNumber: 13\n        }\n      }), /*#__PURE__*/React.createElement(Distortion, {\n        settings: melodySettings,\n        handleValueChange: this.handleMelodyValueChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 435,\n          columnNumber: 13\n        }\n      }))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"block drumsblock\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 442,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"blocktitle\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 443,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"h1\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 444,\n          columnNumber: 13\n        }\n      }, \"Samplers\")), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"column\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 446,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"heading\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 447,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"h2\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 448,\n          columnNumber: 15\n        }\n      }, \"Channel\")), /*#__PURE__*/React.createElement(ChannelForSamplers, {\n        settings: drumsSettings,\n        handleValueChange: this.handleDrumsValueChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 450,\n          columnNumber: 13\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"column\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 455,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"heading\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 456,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"h2\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 457,\n          columnNumber: 15\n        }\n      }, \"Channel\")), /*#__PURE__*/React.createElement(ChannelForSamplers, {\n        settings: drumsSettings2,\n        handleValueChange: this.handleDrums2ValueChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 459,\n          columnNumber: 13\n        }\n      }))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"block bassblock\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 467,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"blocktitle\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 468,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"h1\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 469,\n          columnNumber: 13\n        }\n      }, \"Bass\")), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"column\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 471,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(ToneSynth, {\n        settings: bassSettings,\n        handleValueChange: this.handleBassValueChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 472,\n          columnNumber: 13\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"futter\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 476,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"h2\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 477,\n          columnNumber: 15\n        }\n      }, \"Design & Coding\"), /*#__PURE__*/React.createElement(\"h2\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 478,\n          columnNumber: 15\n        }\n      }, \"Karina Mulkamanova\"), /*#__PURE__*/React.createElement(\"h2\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 479,\n          columnNumber: 15\n        }\n      }, \"HSE ADC 2022\"))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"column\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 483,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(Delay, {\n        settings: bassSettings,\n        handleValueChange: this.handleBassValueChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 485,\n          columnNumber: 13\n        }\n      }), /*#__PURE__*/React.createElement(Tremolo, {\n        settings: bassSettings,\n        handleValueChange: this.handleBassValueChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 489,\n          columnNumber: 13\n        }\n      }), /*#__PURE__*/React.createElement(Distortion, {\n        settings: bassSettings,\n        handleValueChange: this.handleBassValueChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 493,\n          columnNumber: 13\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"column\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 499,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(Channel, {\n        settings: bassSettings,\n        handleValueChange: this.handleBassValueChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 500,\n          columnNumber: 13\n        }\n      }), /*#__PURE__*/React.createElement(AutoFilter, {\n        settings: bassSettings,\n        handleValueChange: this.handleBassValueChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 504,\n          columnNumber: 13\n        }\n      }))));\n    }\n  }]);\n\n  return Container;\n}(Component);\n\nexport { Container as default };","map":{"version":3,"names":["Tone","React","Component","bassSettings","melodySettings","drumsSettings","drumsSettings2","ToneSynth","Channel","ChannelForSamplers","Chorus","Delay","Distortion","AutoFilter","Tremolo","SC_Button","SC_Slider","bassSynth","bassPingPongDelay","bassPhaser","bassTremolo","bassDistortion","bassAutoFilter","bassChannel","melodySynth","melodyChorus","melodyPingPongDelay","melodyChannel","melodyDistortion","samplerChannel","samplerChannel2","Container","props","handleStart","state","Synth","synth","PingPongDelay","pingPongDelay","autoFilter","start","tremolo","distortion","channel","toDestination","chain","bassPart","Part","time","note","triggerAttackRelease","noteName","duration","velocity","sequence","steps","loopEnd","loop","chorus","melodyPart","sampler","Sampler","urls","A1","A2","baseUrl","drumsPart","sampler2","drumsPart2","Transport","className","className2","document","getElementsByClassName","classList","add","handleBassValueChange","property","value","oscillator","type","envelope","attack","decay","sustain","release","volume","detune","portamento","phase","harmonicity","wet","delayTime","maxDelayTime","frequency","depth","baseFrequency","spread","mute","pan","setState","handleMelodyValueChange","handleDrumsValueChange","handleDrums2ValueChange"],"sources":["/Users/karinamulkamanova/coding/WebSynth-FirstModule/app/javascript/prototypes/prototype_14/Container.jsx"],"sourcesContent":["import * as Tone from 'tone'\nimport React, { Component } from 'react'\n\nimport * as bassSettings from './tunes/bass.js'\nimport * as melodySettings from './tunes/melody.js'\nimport * as drumsSettings from './tunes/drums.js'\nimport * as drumsSettings2 from './tunes/drums2.js'\n\nimport ToneSynth from './modules/ToneSynth.jsx'\nimport Channel from './modules/Channel.jsx'\nimport ChannelForSamplers from './modules/ChannelForSamplers.jsx'\nimport Chorus from './modules/Chorus.jsx'\nimport Delay from './modules/Delay.jsx'\nimport Distortion from './modules/Distortion.jsx'\nimport AutoFilter from './modules/AutoFilter.jsx'\nimport Tremolo from './modules/Tremolo.jsx'\n\nimport SC_Button from './components/SC_Button'\nimport SC_Slider from './components/SC_Slider'\n\nlet bassSynth\nlet bassPingPongDelay\nlet bassPhaser\nlet bassTremolo\nlet bassDistortion\nlet bassAutoFilter\nlet bassChannel\n\n\nlet melodySynth\nlet melodyChorus\nlet melodyPingPongDelay\nlet melodyChannel\nlet melodyDistortion\n\nlet samplerChannel\nlet samplerChannel2\n\nexport default class Container extends Component {\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      bassSettings,\n      melodySettings,\n      drumsSettings,\n      drumsSettings2\n    }\n  }\n\n  handleStart = () => {\n    const { bassSettings, melodySettings, drumsSettings, drumsSettings2 } = this.state\n\n    //\n    //\n    bassSynth = new Tone.Synth(bassSettings.synth)\n\n    bassPingPongDelay = new Tone.PingPongDelay(bassSettings.pingPongDelay)\n    bassAutoFilter = new Tone.AutoFilter(bassSettings.autoFilter).start();\n    bassTremolo = new Tone.Tremolo(bassSettings.tremolo)\n    bassDistortion = new Tone.Distortion(bassSettings.distortion)\n    bassChannel = new Tone.Channel(bassSettings.channel).toDestination()\n\n    bassSynth.chain(bassPingPongDelay, bassTremolo, bassDistortion, bassAutoFilter, bassChannel)\n\n    const bassPart = new Tone.Part((time, note) => {\n      bassSynth.triggerAttackRelease(\n        note.noteName,\n        note.duration,\n        time,\n        note.velocity\n      )\n    }, bassSettings.sequence.steps).start(0)\n\n    bassPart.loopEnd = bassSettings.sequence.duration\n    bassPart.loop = true\n    //\n    //\n    melodySynth = new Tone.Synth(melodySettings.synth)\n    melodyChorus = new Tone.Chorus(melodySettings.chorus).start()\n    melodyPingPongDelay = new Tone.PingPongDelay(melodySettings.pingPongDelay)\n    melodyDistortion = new Tone.Distortion(melodySettings.distortion)\n\n    melodyChannel = new Tone.Channel(melodySettings.channel).toDestination()\n\n    melodySynth.chain(melodyChorus, melodyPingPongDelay, melodyDistortion, melodyChannel)\n\n    const melodyPart = new Tone.Part((time, note) => {\n      melodySynth.triggerAttackRelease(\n        note.noteName,\n        note.duration,\n        time,\n        note.velocity\n      )\n    }, melodySettings.sequence.steps).start(0)\n\n    melodyPart.loopEnd = melodySettings.sequence.duration\n    melodyPart.loop = true\n    //\n    //\n    const sampler = new Tone.Sampler({\n      urls: {\n        A1: '00001-Linn-9000-BassDrumrum1.mp3',\n        A2: '00017-Linn-9000-Snare.mp3'\n      },\n      baseUrl: 'http://localhost:3000/samples/'\n      // onload: () => {\n      //   sampler.triggerAttackRelease(['A1', 'A2', 'A1', 'A2'], 0.5)\n      // }\n    })\n\n    samplerChannel = new Tone.Channel(drumsSettings.channel).toDestination()\n\n    sampler.chain(samplerChannel)\n\n    const drumsPart = new Tone.Part((time, note) => {\n      sampler.triggerAttackRelease(\n        note.noteName,\n        note.duration,\n        time,\n        note.velocity\n      )\n    }, drumsSettings.sequence.steps).start(0)\n\n    drumsPart.loopEnd = drumsSettings.sequence.duration\n    drumsPart.loop = true\n\n\n    const sampler2 = new Tone.Sampler({\n      urls: {\n        A1: '00034-Tama-TS-206-Perc-Noise-Long-1.mp3',\n        // A2: '00033-Tama-TS-206-Kick-Short-1B.mp3'\n        // A2: '00040-Tama-TS-500-BassDrum1.mp3'\n\n        A2: '00047-Vermona-DRM1-MK3-BassDrum13.mp3'\n\n      },\n      baseUrl: 'http://localhost:3000/samples/'\n      // onload: () => {\n      //   sampler.triggerAttackRelease(['A1', 'A2', 'A1', 'A2'], 0.5)\n      // }\n    })\n\n    samplerChannel2 = new Tone.Channel(drumsSettings2.channel).toDestination()\n\n    sampler2.chain(samplerChannel2)\n\n    const drumsPart2 = new Tone.Part((time, note) => {\n      sampler2.triggerAttackRelease(\n        note.noteName,\n        note.duration,\n        time,\n        note.velocity\n      )\n    }, drumsSettings2.sequence.steps).start(0)\n\n    drumsPart2.loopEnd = drumsSettings2.sequence.duration\n    drumsPart2.loop = true\n\n    Tone.Transport.start()\n\n    var className = \"visible\";\n    var className2 = \"nonvisible\";\n    document.getElementsByClassName(\"bassblock\")[0].classList.add(className);\n    document.getElementsByClassName(\"melodyblock\")[0].classList.add(className);\n    document.getElementsByClassName(\"drumsblock\")[0].classList.add(className);\n    document.getElementsByClassName(\"first\")[0].classList.add(className);\n    document.getElementsByClassName(\"welcome\")[0].classList.add(className2);\n  }\n\n  handleBassValueChange = (property, value) => {\n    const { bassSettings } = this.state\n\n    if (property === 'synthType') {\n      bassSynth.oscillator.type = value\n      bassSettings.synth.oscillator.type = value\n    } else if (property === 'synthEnvelopeAttack') {\n      bassSynth.envelope.attack = value\n      bassSettings.synth.envelope.attack = value\n    } else if (property === 'synthEnvelopeDecay') {\n      bassSynth.envelope.decay = value\n      bassSettings.synth.envelope.decay = value\n    } else if (property === 'synthEnvelopeSustain') {\n      bassSynth.envelope.sustain = value\n      bassSettings.synth.envelope.sustain = value\n    } else if (property === 'synthEnvelopeRelease') {\n      bassSynth.envelope.release = value\n      bassSettings.synth.envelope.release = value\n    } else if (property === 'synthVolume') {\n      bassSynth.volume.value = value\n      bassSettings.synth.volume = value\n    } else if (property === 'synthDetune') {\n      bassSynth.detune.value = value\n      bassSettings.synth.detune = value\n    } else if (property === 'synthPortamento') {\n      bassSynth.portamento = value\n      bassSettings.synth.portamento = value\n    } else if (property === 'synthPhase') {\n      bassSynth.oscillator.phase = value\n      bassSettings.synth.oscillator.phase = value\n    } else if (property === 'synthHarmonicity') {\n      bassSynth.oscillator.harmonicity.value = value\n      bassSettings.synth.oscillator.harmonicity = value\n    } else if (property === 'pingPongDelayWet') {\n      bassPingPongDelay.wet.value = value\n      bassSettings.pingPongDelay.wet = value\n    } else if (property === 'pingPongDelayDelayTime') {\n      bassPingPongDelay.delayTime.value = value\n      bassSettings.pingPongDelay.delayTime = value\n    } else if (property === 'pingPongDelayDelayMaxDelayTime') {\n      bassPingPongDelay.maxDelayTime = value\n      bassSettings.pingPongDelay.maxDelayTime = value\n    }\n\n    else if (property === 'autoFilterWet') {\n      bassAutoFilter.wet.value = value\n      bassSettings.autoFilter.wet = value\n    } else if (property === 'autoFilterFrequency') {\n      bassAutoFilter.frequency.value = value\n      bassSettings.autoFilter.frequency = value\n    } else if (property === 'autoFilterDepth') {\n      bassAutoFilter.depth.value = value\n      bassSettings.autoFilter.depth = value\n    } else if (property === 'autoFilterBaseFrequency') {\n      bassAutoFilter.baseFrequency = value\n      bassSettings.autoFilter.baseFrequency = value\n    } else if (property === 'autoFilterType') {\n      bassAutoFilter.type = value\n      bassSettings.autoFilter.type = value\n    }\n\n    else if (property === 'distortionWet') {\n      bassDistortion.wet.value = value\n      bassSettings.distortion.wet = value\n    } else if (property === 'distortionDistortion') {\n      bassDistortion.distortion = value\n      bassSettings.distortion.distortion = value\n    }\n\n    else if (property === 'tremoloWet') {\n      bassTremolo.wet.value = value\n      bassSettings.tremolo.wet = value\n    } else if (property === 'tremoloFrequency') {\n      bassTremolo.frequency.value = value\n      bassSettings.tremolo.frequency = value\n    } else if (property === 'tremoloDepth') {\n      bassTremolo.depth.value = value\n      bassSettings.tremolo.depth = value\n    } else if (property === 'tremoloSpread') {\n      bassTremolo.spread = value\n      bassSettings.tremolo.spread = value\n    }\n\n    else if (property === 'channelVolume') {\n      bassChannel.volume.value = value\n      bassSettings.channel.volume = value\n    } else if (property === 'channelMute') {\n      bassChannel.mute = value\n      bassSettings.channel.mute = value\n    } else if (property === 'channelPan') {\n      bassChannel.pan.value = value\n      bassSettings.channel.pan = value\n    }\n\n    this.setState({\n      bassSettings\n    })\n  }\n\n  handleMelodyValueChange = (property, value) => {\n    const { melodySettings } = this.state\n\n    if (property === 'synthType') {\n      melodySynth.oscillator.type = value\n      melodySettings.synth.oscillator.type = value\n    } else if (property === 'synthEnvelopeAttack') {\n      melodySynth.envelope.attack = value\n      melodySettings.synth.envelope.attack = value\n    } else if (property === 'synthEnvelopeDecay') {\n      melodySynth.envelope.decay = value\n      melodySettings.synth.envelope.decay = value\n    } else if (property === 'synthEnvelopeSustain') {\n      melodySynth.envelope.sustain = value\n      melodySettings.synth.envelope.sustain = value\n    } else if (property === 'synthEnvelopeRelease') {\n      melodySynth.envelope.release = value\n      melodySettings.synth.envelope.release = value\n    } else if (property === 'synthVolume') {\n      melodySynth.volume.value = value\n      melodySettings.synth.volume = value\n    } else if (property === 'synthDetune') {\n      melodySynth.detune.value = value\n      melodySettings.synth.detune = value\n    } else if (property === 'synthPortamento') {\n      melodySynth.portamento = value\n      melodySettings.synth.portamento = value\n    } else if (property === 'synthPhase') {\n      melodySynth.oscillator.phase = value\n      melodySettings.synth.oscillator.phase = value\n    } else if (property === 'synthHarmonicity') {\n      melodySynth.oscillator.harmonicity.value = value\n      melodySettings.synth.oscillator.harmonicity = value\n    } else if (property === 'pingPongDelayWet') {\n      melodyPingPongDelay.wet.value = value\n      melodySettings.pingPongDelay.wet = value\n    } else if (property === 'pingPongDelayDelayTime') {\n      melodyPingPongDelay.delayTime.value = value\n      melodySettings.pingPongDelay.delayTime = value\n    } else if (property === 'pingPongDelayDelayMaxDelayTime') {\n      melodyPingPongDelay.maxDelayTime = value\n      melodySettings.pingPongDelay.maxDelayTime = value\n    }\n\n    else if (property === 'chorusWet') {\n      melodyChorus.wet.value = value\n      melodySettings.chorus.wet = value\n    } else if (property === 'chorusFrequency') {\n      melodyChorus.frequency.value = value\n      melodySettings.chorus.frequency = value\n    } else if (property === 'chorusDelayTime') {\n      melodyChorus.delayTime = value\n      melodySettings.chorus.delayTime = value\n    } else if (property === 'chorusSpread') {\n      melodyChorus.spread = value\n      melodySettings.chorus.spread = value\n    } else if (property === 'chorusType') {\n      melodyChorus.type = value\n      melodySettings.chorus.type = value\n    }\n\n    else if (property === 'distortionWet') {\n      melodyDistortion.wet.value = value\n      melodySettings.distortion.wet = value\n    } else if (property === 'distortionDistortion') {\n      melodyDistortion.distortion = value\n      melodySettings.distortion.distortion = value\n    }\n\n\n    else if (property === 'channelVolume') {\n      melodyChannel.volume.value = value\n      melodySettings.channel.volume = value\n    } else if (property === 'channelMute') {\n      melodyChannel.mute = value\n      melodySettings.channel.mute = value\n    } else if (property === 'channelPan') {\n      melodyChannel.pan.value = value\n      melodySettings.channel.pan = value\n    }\n\n    this.setState({\n      melodySettings\n    })\n  }\n\n  handleDrumsValueChange = (property, value) => {\n    const { drumsSettings } = this.state\n\n    if (property === 'channelVolume') {\n      samplerChannel.volume.value = value\n      drumsSettings.channel.volume = value\n    } else if (property === 'channelMute') {\n      samplerChannel.mute = value\n      drumsSettings.channel.mute = value\n    }\n\n    this.setState({\n      drumsSettings\n    })\n  }\n\n  handleDrums2ValueChange = (property, value) => {\n    const { drumsSettings2 } = this.state\n\n    if (property === 'channelVolume') {\n      samplerChannel2.volume.value = value\n      drumsSettings2.channel.volume = value\n    } else if (property === 'channelMute') {\n      samplerChannel2.mute = value\n      drumsSettings2.channel.mute = value\n    }\n\n    this.setState({\n      drumsSettings2\n    })\n  }\n\n  render() {\n    const { bassSettings, melodySettings, drumsSettings, drumsSettings2 } = this.state\n\n    return (\n      <div className=\"Container\">\n        <div className=\"welcome\">\n          <SC_Button\n            text=\"Click me to start Road Trip\"\n            handleClick={this.handleStart}\n          />\n        </div>\n\n        <div className=\"first\">\n          <div className=\"firstblack\">\n            <h2>Remember the pop music radio your parents listened to on road trips</h2>\n            <h1>Road Trip Synthesizer</h1>\n          </div>\n        </div>\n\n\n\n        <div className=\"block melodyblock\">\n          <div className=\"blocktitle\">\n            <h1>Main Melody</h1>\n          </div>\n\n          <div className=\"column\">\n            <ToneSynth\n              settings={melodySettings}\n              handleValueChange={this.handleMelodyValueChange}\n            />\n          </div>\n          <div className=\"column\">\n            <Chorus\n              settings={melodySettings}\n              handleValueChange={this.handleMelodyValueChange}\n            />\n            <Delay\n              settings={melodySettings}\n              handleValueChange={this.handleMelodyValueChange}\n            />\n          </div>\n          <div className=\"column\">\n            <Channel\n              settings={melodySettings}\n              handleValueChange={this.handleMelodyValueChange}\n            />\n            <Distortion\n              settings={melodySettings}\n              handleValueChange={this.handleMelodyValueChange}\n            />\n          </div>\n        </div>\n\n        <div className=\"block drumsblock\">\n          <div className=\"blocktitle\">\n            <h1>Samplers</h1>\n          </div>\n          <div className=\"column\">\n            <div className=\"heading\">\n              <h2>Channel</h2>\n            </div>\n            <ChannelForSamplers\n              settings={drumsSettings}\n              handleValueChange={this.handleDrumsValueChange}\n            />\n          </div>\n          <div className=\"column\">\n            <div className=\"heading\">\n              <h2>Channel</h2>\n            </div>\n            <ChannelForSamplers\n              settings={drumsSettings2}\n              handleValueChange={this.handleDrums2ValueChange}\n            />\n          </div>\n\n        </div>\n\n        <div className=\"block bassblock\">\n          <div className=\"blocktitle\">\n            <h1>Bass</h1>\n          </div>\n          <div className=\"column\">\n            <ToneSynth\n              settings={bassSettings}\n              handleValueChange={this.handleBassValueChange}\n            />\n            <div className=\"futter\">\n              <h2>Design & Coding</h2>\n              <h2>Karina Mulkamanova</h2>\n              <h2>HSE ADC 2022</h2>\n\n            </div>\n          </div>\n          <div className=\"column\">\n\n            <Delay\n              settings={bassSettings}\n              handleValueChange={this.handleBassValueChange}\n            />\n            <Tremolo\n              settings={bassSettings}\n              handleValueChange={this.handleBassValueChange}\n            />\n            <Distortion\n              settings={bassSettings}\n              handleValueChange={this.handleBassValueChange}\n            />\n\n          </div>\n          <div className=\"column\">\n            <Channel\n              settings={bassSettings}\n              handleValueChange={this.handleBassValueChange}\n            />\n            <AutoFilter\n              settings={bassSettings}\n              handleValueChange={this.handleBassValueChange}\n            />\n          </div>\n\n\n        </div>\n\n\n\n      </div>\n    )\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}