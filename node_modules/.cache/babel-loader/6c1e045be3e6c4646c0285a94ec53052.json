{"ast":null,"code":"var _jsxFileName = \"/Users/karinamulkamanova/coding/ADC-Generative-Art-Boilerplate-2023/app/javascript/prototypes/prototype_14/Container.jsx\";\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, \"prototype\", { writable: false }); return Constructor; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); Object.defineProperty(subClass, \"prototype\", { writable: false }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (typeof call === \"object\" || typeof call === \"function\")) { return call; } else if (call !== void 0) { throw new TypeError(\"Derived constructors may only return object or undefined\"); } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nimport * as Tone from 'tone';\nimport React, { Component } from 'react';\nimport * as bassSettings from './tunes/bass.js';\nimport * as melodySettings from './tunes/melody.js';\nimport * as drumsSettings from './tunes/drums.js';\nimport * as drumsSettings2 from './tunes/drums2.js';\nimport ToneSynth from './modules/ToneSynth.jsx';\nimport Channel from './modules/Channel.jsx';\nimport Chorus from './modules/Chorus.jsx';\nimport Delay from './modules/Delay.jsx';\nimport Distortion from './modules/Distortion.jsx';\nimport AutoFilter from './modules/AutoFilter.jsx';\nimport Tremolo from './modules/Tremolo.jsx';\nimport SC_Button from './components/SC_Button';\nimport SC_Slider from './components/SC_Slider';\nvar bassSynth;\nvar bassPingPongDelay;\nvar bassPhaser;\nvar bassTremolo;\nvar bassDistortion;\nvar bassAutoFilter;\nvar bassChannel;\nvar melodySynth;\nvar melodyChorus;\nvar melodyPingPongDelay;\nvar melodyChannel;\nvar melodyDistortion;\nvar samplerChannel;\nvar samplerChannel2;\n\nvar Container = /*#__PURE__*/function (_Component) {\n  _inherits(Container, _Component);\n\n  var _super = _createSuper(Container);\n\n  function Container(props) {\n    var _this;\n\n    _classCallCheck(this, Container);\n\n    _this = _super.call(this, props);\n\n    _this.handleStart = function () {\n      var _this$state = _this.state,\n          bassSettings = _this$state.bassSettings,\n          melodySettings = _this$state.melodySettings,\n          drumsSettings = _this$state.drumsSettings,\n          drumsSettings2 = _this$state.drumsSettings2; //\n      //\n\n      bassSynth = new Tone.Synth(bassSettings.synth);\n      bassPingPongDelay = new Tone.PingPongDelay(bassSettings.pingPongDelay);\n      bassAutoFilter = new Tone.AutoFilter(bassSettings.autoFilter).start();\n      bassTremolo = new Tone.Tremolo(bassSettings.tremolo);\n      bassDistortion = new Tone.Distortion(bassSettings.distortion);\n      bassChannel = new Tone.Channel(bassSettings.channel).toDestination();\n      bassSynth.chain(bassPingPongDelay, bassTremolo, bassDistortion, bassAutoFilter, bassChannel);\n      var bassPart = new Tone.Part(function (time, note) {\n        bassSynth.triggerAttackRelease(note.noteName, note.duration, time, note.velocity);\n      }, bassSettings.sequence.steps).start(0);\n      bassPart.loopEnd = bassSettings.sequence.duration;\n      bassPart.loop = true; //\n      //\n\n      melodySynth = new Tone.Synth(melodySettings.synth);\n      melodyChorus = new Tone.Chorus(melodySettings.chorus).start();\n      melodyPingPongDelay = new Tone.PingPongDelay(melodySettings.pingPongDelay);\n      melodyDistortion = new Tone.Distortion(melodySettings.distortion);\n      melodyChannel = new Tone.Channel(melodySettings.channel).toDestination();\n      melodySynth.chain(melodyChorus, melodyPingPongDelay, melodyDistortion, melodyChannel);\n      var melodyPart = new Tone.Part(function (time, note) {\n        melodySynth.triggerAttackRelease(note.noteName, note.duration, time, note.velocity);\n      }, melodySettings.sequence.steps).start(0);\n      melodyPart.loopEnd = melodySettings.sequence.duration;\n      melodyPart.loop = true; //\n      //\n\n      var sampler = new Tone.Sampler({\n        urls: {\n          A1: '00001-Linn-9000-BassDrumrum1.mp3',\n          A2: '00017-Linn-9000-Snare.mp3'\n        },\n        baseUrl: 'http://localhost:3000/samples/' // onload: () => {\n        //   sampler.triggerAttackRelease(['A1', 'A2', 'A1', 'A2'], 0.5)\n        // }\n\n      });\n      samplerChannel = new Tone.Channel(drumsSettings.channel).toDestination();\n      sampler.chain(samplerChannel);\n      var drumsPart = new Tone.Part(function (time, note) {\n        sampler.triggerAttackRelease(note.noteName, note.duration, time, note.velocity);\n      }, drumsSettings.sequence.steps).start(0);\n      drumsPart.loopEnd = drumsSettings.sequence.duration;\n      drumsPart.loop = true;\n      var sampler2 = new Tone.Sampler({\n        urls: {\n          A1: '00057-Vermona-DRM1-MK3-HH02.mp3',\n          A2: '00039-Tama-TS-305-Tom-3.mp3'\n        },\n        baseUrl: 'http://localhost:3000/samples/' // onload: () => {\n        //   sampler.triggerAttackRelease(['A1', 'A2', 'A1', 'A2'], 0.5)\n        // }\n\n      });\n      samplerChannel2 = new Tone.Channel(drumsSettings2.channel).toDestination();\n      sampler2.chain(samplerChannel2);\n      var drumsPart2 = new Tone.Part(function (time, note) {\n        sampler2.triggerAttackRelease(note.noteName, note.duration, time, note.velocity);\n      }, drumsSettings2.sequence.steps).start(0);\n      drumsPart2.loopEnd = drumsSettings2.sequence.duration;\n      drumsPart2.loop = true;\n      Tone.Transport.start();\n    };\n\n    _this.handleBassValueChange = function (property, value) {\n      var bassSettings = _this.state.bassSettings;\n\n      if (property === 'synthType') {\n        bassSynth.oscillator.type = value;\n        bassSettings.synth.oscillator.type = value;\n      } else if (property === 'synthEnvelopeAttack') {\n        bassSynth.envelope.attack = value;\n        bassSettings.synth.envelope.attack = value;\n      } else if (property === 'synthEnvelopeDecay') {\n        bassSynth.envelope.decay = value;\n        bassSettings.synth.envelope.decay = value;\n      } else if (property === 'synthEnvelopeSustain') {\n        bassSynth.envelope.sustain = value;\n        bassSettings.synth.envelope.sustain = value;\n      } else if (property === 'synthEnvelopeRelease') {\n        bassSynth.envelope.release = value;\n        bassSettings.synth.envelope.release = value;\n      } else if (property === 'synthVolume') {\n        bassSynth.volume.value = value;\n        bassSettings.synth.volume = value;\n      } else if (property === 'synthDetune') {\n        bassSynth.detune.value = value;\n        bassSettings.synth.detune = value;\n      } else if (property === 'synthPortamento') {\n        bassSynth.portamento = value;\n        bassSettings.synth.portamento = value;\n      } else if (property === 'synthPhase') {\n        bassSynth.oscillator.phase = value;\n        bassSettings.synth.oscillator.phase = value;\n      } else if (property === 'synthHarmonicity') {\n        bassSynth.oscillator.harmonicity.value = value;\n        bassSettings.synth.oscillator.harmonicity = value;\n      } else if (property === 'pingPongDelayWet') {\n        bassPingPongDelay.wet.value = value;\n        bassSettings.pingPongDelay.wet = value;\n      } else if (property === 'pingPongDelayDelayTime') {\n        bassPingPongDelay.delayTime.value = value;\n        bassSettings.pingPongDelay.delayTime = value;\n      } else if (property === 'pingPongDelayDelayMaxDelayTime') {\n        bassPingPongDelay.maxDelayTime = value;\n        bassSettings.pingPongDelay.maxDelayTime = value;\n      } else if (property === 'autoFilterWet') {\n        bassAutoFilter.wet.value = value;\n        bassSettings.autoFilter.wet = value;\n      } else if (property === 'autoFilterFrequency') {\n        bassAutoFilter.frequency.value = value;\n        bassSettings.autoFilter.frequency = value;\n      } else if (property === 'autoFilterDepth') {\n        bassAutoFilter.depth.value = value;\n        bassSettings.autoFilter.depth = value;\n      } else if (property === 'autoFilterBaseFrequency') {\n        bassAutoFilter.baseFrequency = value;\n        bassSettings.autoFilter.baseFrequency = value;\n      } else if (property === 'autoFilterType') {\n        bassAutoFilter.type = value;\n        bassSettings.autoFilter.type = value;\n      } else if (property === 'distortionWet') {\n        bassDistortion.wet.value = value;\n        bassSettings.distortion.wet = value;\n      } else if (property === 'distortionDistortion') {\n        bassDistortion.distortion = value;\n        bassSettings.distortion.distortion = value;\n      } else if (property === 'tremoloWet') {\n        bassTremolo.wet.value = value;\n        bassSettings.tremolo.wet = value;\n      } else if (property === 'tremoloFrequency') {\n        bassTremolo.frequency.value = value;\n        bassSettings.tremolo.frequency = value;\n      } else if (property === 'tremoloDepth') {\n        bassTremolo.depth.value = value;\n        bassSettings.tremolo.depth = value;\n      } else if (property === 'tremoloSpread') {\n        bassTremolo.spread = value;\n        bassSettings.tremolo.spread = value;\n      } else if (property === 'channelVolume') {\n        bassChannel.volume.value = value;\n        bassSettings.channel.volume = value;\n      } else if (property === 'channelMute') {\n        bassChannel.mute = value;\n        bassSettings.channel.mute = value;\n      }\n\n      _this.setState({\n        bassSettings: bassSettings\n      });\n    };\n\n    _this.handleMelodyValueChange = function (property, value) {\n      var melodySettings = _this.state.melodySettings;\n\n      if (property === 'synthType') {\n        melodySynth.oscillator.type = value;\n        melodySettings.synth.oscillator.type = value;\n      } else if (property === 'synthEnvelopeAttack') {\n        melodySynth.envelope.attack = value;\n        melodySettings.synth.envelope.attack = value;\n      } else if (property === 'synthEnvelopeDecay') {\n        melodySynth.envelope.decay = value;\n        melodySettings.synth.envelope.decay = value;\n      } else if (property === 'synthEnvelopeSustain') {\n        melodySynth.envelope.sustain = value;\n        melodySettings.synth.envelope.sustain = value;\n      } else if (property === 'synthEnvelopeRelease') {\n        melodySynth.envelope.release = value;\n        melodySettings.synth.envelope.release = value;\n      } else if (property === 'synthVolume') {\n        melodySynth.volume.value = value;\n        melodySettings.synth.volume = value;\n      } else if (property === 'synthDetune') {\n        melodySynth.detune.value = value;\n        melodySettings.synth.detune = value;\n      } else if (property === 'synthPortamento') {\n        melodySynth.portamento = value;\n        melodySettings.synth.portamento = value;\n      } else if (property === 'synthPhase') {\n        melodySynth.oscillator.phase = value;\n        melodySettings.synth.oscillator.phase = value;\n      } else if (property === 'synthHarmonicity') {\n        melodySynth.oscillator.harmonicity.value = value;\n        melodySettings.synth.oscillator.harmonicity = value;\n      } else if (property === 'pingPongDelayWet') {\n        melodyPingPongDelay.wet.value = value;\n        melodySettings.pingPongDelay.wet = value;\n      } else if (property === 'pingPongDelayDelayTime') {\n        melodyPingPongDelay.delayTime.value = value;\n        melodySettings.pingPongDelay.delayTime = value;\n      } else if (property === 'pingPongDelayDelayMaxDelayTime') {\n        melodyPingPongDelay.maxDelayTime = value;\n        melodySettings.pingPongDelay.maxDelayTime = value;\n      } else if (property === 'chorusWet') {\n        melodyChorus.wet.value = value;\n        melodySettings.chorus.wet = value;\n      } else if (property === 'chorusFrequency') {\n        melodyChorus.frequency.value = value;\n        melodySettings.chorus.frequency = value;\n      } else if (property === 'chorusDelayTime') {\n        melodyChorus.delayTime = value;\n        melodySettings.chorus.delayTime = value;\n      } else if (property === 'chorusSpread') {\n        melodyChorus.spread = value;\n        melodySettings.chorus.spread = value;\n      } else if (property === 'chorusType') {\n        melodyChorus.type = value;\n        melodySettings.chorus.type = value;\n      } else if (property === 'distortionWet') {\n        melodyDistortion.wet.value = value;\n        melodySettings.distortion.wet = value;\n      } else if (property === 'distortionDistortion') {\n        melodyDistortion.distortion = value;\n        melodySettings.distortion.distortion = value;\n      } else if (property === 'channelVolume') {\n        melodyChannel.volume.value = value;\n        melodySettings.channel.volume = value;\n      } else if (property === 'channelMute') {\n        melodyChannel.mute = value;\n        melodySettings.channel.mute = value;\n      }\n\n      _this.setState({\n        melodySettings: melodySettings\n      });\n    };\n\n    _this.handleDrumsValueChange = function (property, value) {\n      var drumsSettings = _this.state.drumsSettings;\n\n      if (property === 'channelVolume') {\n        samplerChannel.volume.value = value;\n        drumsSettings.channel.volume = value;\n      } else if (property === 'channelMute') {\n        samplerChannel.mute = value;\n        drumsSettings.channel.mute = value;\n      }\n\n      _this.setState({\n        drumsSettings: drumsSettings\n      });\n    };\n\n    _this.handleDrums2ValueChange = function (property, value) {\n      var drumsSettings2 = _this.state.drumsSettings2;\n\n      if (property === 'channelVolume') {\n        samplerChannel2.volume.value = value;\n        drumsSettings2.channel.volume = value;\n      } else if (property === 'channelMute') {\n        samplerChannel2.mute = value;\n        drumsSettings2.channel.mute = value;\n      }\n\n      _this.setState({\n        drumsSettings2: drumsSettings2\n      });\n    };\n\n    _this.state = {\n      bassSettings: bassSettings,\n      melodySettings: melodySettings,\n      drumsSettings: drumsSettings,\n      drumsSettings2: drumsSettings2\n    };\n    return _this;\n  }\n\n  _createClass(Container, [{\n    key: \"render\",\n    value: function render() {\n      var _this$state2 = this.state,\n          bassSettings = _this$state2.bassSettings,\n          melodySettings = _this$state2.melodySettings,\n          drumsSettings = _this$state2.drumsSettings,\n          drumsSettings2 = _this$state2.drumsSettings2;\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"Container\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 373,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"first\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 375,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(SC_Button, {\n        text: \"FM Start\",\n        handleClick: this.handleStart,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 376,\n          columnNumber: 11\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"lights\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 380,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 381,\n          columnNumber: 13\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 382,\n          columnNumber: 13\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 383,\n          columnNumber: 13\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 384,\n          columnNumber: 13\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 385,\n          columnNumber: 13\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 386,\n          columnNumber: 13\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 387,\n          columnNumber: 13\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 388,\n          columnNumber: 13\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 389,\n          columnNumber: 13\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 390,\n          columnNumber: 13\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 391,\n          columnNumber: 13\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 392,\n          columnNumber: 13\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 393,\n          columnNumber: 13\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 394,\n          columnNumber: 13\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 395,\n          columnNumber: 13\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 396,\n          columnNumber: 13\n        }\n      }))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"block melodyblock\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 401,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"blocktitle\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 402,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"h1\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 403,\n          columnNumber: 13\n        }\n      }, \"Main Melody\")), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"column\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 406,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(ToneSynth, {\n        settings: melodySettings,\n        handleValueChange: this.handleMelodyValueChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 407,\n          columnNumber: 13\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"column\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 412,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(Chorus, {\n        settings: melodySettings,\n        handleValueChange: this.handleMelodyValueChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 413,\n          columnNumber: 13\n        }\n      }), /*#__PURE__*/React.createElement(Delay, {\n        settings: melodySettings,\n        handleValueChange: this.handleMelodyValueChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 417,\n          columnNumber: 13\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"column\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 422,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(Channel, {\n        settings: melodySettings,\n        handleValueChange: this.handleMelodyValueChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 423,\n          columnNumber: 13\n        }\n      }), /*#__PURE__*/React.createElement(Distortion, {\n        settings: melodySettings,\n        handleValueChange: this.handleMelodyValueChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 427,\n          columnNumber: 13\n        }\n      }))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"block bassblock\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 434,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"blocktitle\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 435,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"h1\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 436,\n          columnNumber: 13\n        }\n      }, \"Bass\")), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"column\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 438,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(ToneSynth, {\n        settings: bassSettings,\n        handleValueChange: this.handleBassValueChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 439,\n          columnNumber: 13\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"column\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 444,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(Delay, {\n        settings: bassSettings,\n        handleValueChange: this.handleBassValueChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 446,\n          columnNumber: 13\n        }\n      }), /*#__PURE__*/React.createElement(Distortion, {\n        settings: bassSettings,\n        handleValueChange: this.handleBassValueChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 450,\n          columnNumber: 13\n        }\n      }), /*#__PURE__*/React.createElement(AutoFilter, {\n        settings: bassSettings,\n        handleValueChange: this.handleBassValueChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 454,\n          columnNumber: 13\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"column\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 459,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(Channel, {\n        settings: bassSettings,\n        handleValueChange: this.handleBassValueChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 460,\n          columnNumber: 13\n        }\n      }), /*#__PURE__*/React.createElement(Tremolo, {\n        settings: bassSettings,\n        handleValueChange: this.handleBassValueChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 464,\n          columnNumber: 13\n        }\n      }))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"block drumsblock\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 473,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"h1\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 474,\n          columnNumber: 11\n        }\n      }, \"Drums\"), /*#__PURE__*/React.createElement(Channel, {\n        settings: drumsSettings,\n        handleValueChange: this.handleDrumsValueChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 475,\n          columnNumber: 11\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"block drumsblock\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 481,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"h1\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 482,\n          columnNumber: 11\n        }\n      }, \"Drums2\"), /*#__PURE__*/React.createElement(Channel, {\n        settings: drumsSettings2,\n        handleValueChange: this.handleDrums2ValueChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 483,\n          columnNumber: 11\n        }\n      })));\n    }\n  }]);\n\n  return Container;\n}(Component);\n\nexport { Container as default };","map":{"version":3,"names":["Tone","React","Component","bassSettings","melodySettings","drumsSettings","drumsSettings2","ToneSynth","Channel","Chorus","Delay","Distortion","AutoFilter","Tremolo","SC_Button","SC_Slider","bassSynth","bassPingPongDelay","bassPhaser","bassTremolo","bassDistortion","bassAutoFilter","bassChannel","melodySynth","melodyChorus","melodyPingPongDelay","melodyChannel","melodyDistortion","samplerChannel","samplerChannel2","Container","props","handleStart","state","Synth","synth","PingPongDelay","pingPongDelay","autoFilter","start","tremolo","distortion","channel","toDestination","chain","bassPart","Part","time","note","triggerAttackRelease","noteName","duration","velocity","sequence","steps","loopEnd","loop","chorus","melodyPart","sampler","Sampler","urls","A1","A2","baseUrl","drumsPart","sampler2","drumsPart2","Transport","handleBassValueChange","property","value","oscillator","type","envelope","attack","decay","sustain","release","volume","detune","portamento","phase","harmonicity","wet","delayTime","maxDelayTime","frequency","depth","baseFrequency","spread","mute","setState","handleMelodyValueChange","handleDrumsValueChange","handleDrums2ValueChange"],"sources":["/Users/karinamulkamanova/coding/ADC-Generative-Art-Boilerplate-2023/app/javascript/prototypes/prototype_14/Container.jsx"],"sourcesContent":["import * as Tone from 'tone'\nimport React, { Component } from 'react'\n\nimport * as bassSettings from './tunes/bass.js'\nimport * as melodySettings from './tunes/melody.js'\nimport * as drumsSettings from './tunes/drums.js'\nimport * as drumsSettings2 from './tunes/drums2.js'\n\nimport ToneSynth from './modules/ToneSynth.jsx'\nimport Channel from './modules/Channel.jsx'\nimport Chorus from './modules/Chorus.jsx'\nimport Delay from './modules/Delay.jsx'\nimport Distortion from './modules/Distortion.jsx'\nimport AutoFilter from './modules/AutoFilter.jsx'\nimport Tremolo from './modules/Tremolo.jsx'\n\nimport SC_Button from './components/SC_Button'\nimport SC_Slider from './components/SC_Slider'\n\nlet bassSynth\nlet bassPingPongDelay\nlet bassPhaser\nlet bassTremolo\nlet bassDistortion\nlet bassAutoFilter\nlet bassChannel\n\n\nlet melodySynth\nlet melodyChorus\nlet melodyPingPongDelay\nlet melodyChannel\nlet melodyDistortion\n\nlet samplerChannel\nlet samplerChannel2\n\nexport default class Container extends Component {\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      bassSettings,\n      melodySettings,\n      drumsSettings,\n      drumsSettings2\n    }\n  }\n\n  handleStart = () => {\n    const { bassSettings, melodySettings, drumsSettings, drumsSettings2 } = this.state\n\n    //\n    //\n    bassSynth = new Tone.Synth(bassSettings.synth)\n\n    bassPingPongDelay = new Tone.PingPongDelay(bassSettings.pingPongDelay)\n    bassAutoFilter = new Tone.AutoFilter(bassSettings.autoFilter).start();\n    bassTremolo = new Tone.Tremolo(bassSettings.tremolo)\n    bassDistortion = new Tone.Distortion(bassSettings.distortion)\n    bassChannel = new Tone.Channel(bassSettings.channel).toDestination()\n\n    bassSynth.chain(bassPingPongDelay, bassTremolo, bassDistortion, bassAutoFilter, bassChannel)\n\n    const bassPart = new Tone.Part((time, note) => {\n      bassSynth.triggerAttackRelease(\n        note.noteName,\n        note.duration,\n        time,\n        note.velocity\n      )\n    }, bassSettings.sequence.steps).start(0)\n\n    bassPart.loopEnd = bassSettings.sequence.duration\n    bassPart.loop = true\n    //\n    //\n    melodySynth = new Tone.Synth(melodySettings.synth)\n    melodyChorus = new Tone.Chorus(melodySettings.chorus).start()\n    melodyPingPongDelay = new Tone.PingPongDelay(melodySettings.pingPongDelay)\n    melodyDistortion = new Tone.Distortion(melodySettings.distortion)\n\n    melodyChannel = new Tone.Channel(melodySettings.channel).toDestination()\n\n    melodySynth.chain(melodyChorus, melodyPingPongDelay, melodyDistortion, melodyChannel)\n\n    const melodyPart = new Tone.Part((time, note) => {\n      melodySynth.triggerAttackRelease(\n        note.noteName,\n        note.duration,\n        time,\n        note.velocity\n      )\n    }, melodySettings.sequence.steps).start(0)\n\n    melodyPart.loopEnd = melodySettings.sequence.duration\n    melodyPart.loop = true\n    //\n    //\n    const sampler = new Tone.Sampler({\n      urls: {\n        A1: '00001-Linn-9000-BassDrumrum1.mp3',\n        A2: '00017-Linn-9000-Snare.mp3'\n      },\n      baseUrl: 'http://localhost:3000/samples/'\n      // onload: () => {\n      //   sampler.triggerAttackRelease(['A1', 'A2', 'A1', 'A2'], 0.5)\n      // }\n    })\n\n    samplerChannel = new Tone.Channel(drumsSettings.channel).toDestination()\n\n    sampler.chain(samplerChannel)\n\n    const drumsPart = new Tone.Part((time, note) => {\n      sampler.triggerAttackRelease(\n        note.noteName,\n        note.duration,\n        time,\n        note.velocity\n      )\n    }, drumsSettings.sequence.steps).start(0)\n\n    drumsPart.loopEnd = drumsSettings.sequence.duration\n    drumsPart.loop = true\n\n\n    const sampler2 = new Tone.Sampler({\n      urls: {\n        A1: '00057-Vermona-DRM1-MK3-HH02.mp3',\n        A2: '00039-Tama-TS-305-Tom-3.mp3'\n      },\n      baseUrl: 'http://localhost:3000/samples/'\n      // onload: () => {\n      //   sampler.triggerAttackRelease(['A1', 'A2', 'A1', 'A2'], 0.5)\n      // }\n    })\n\n    samplerChannel2 = new Tone.Channel(drumsSettings2.channel).toDestination()\n\n    sampler2.chain(samplerChannel2)\n\n    const drumsPart2 = new Tone.Part((time, note) => {\n      sampler2.triggerAttackRelease(\n        note.noteName,\n        note.duration,\n        time,\n        note.velocity\n      )\n    }, drumsSettings2.sequence.steps).start(0)\n\n    drumsPart2.loopEnd = drumsSettings2.sequence.duration\n    drumsPart2.loop = true\n\n    Tone.Transport.start()\n  }\n\n  handleBassValueChange = (property, value) => {\n    const { bassSettings } = this.state\n\n    if (property === 'synthType') {\n      bassSynth.oscillator.type = value\n      bassSettings.synth.oscillator.type = value\n    } else if (property === 'synthEnvelopeAttack') {\n      bassSynth.envelope.attack = value\n      bassSettings.synth.envelope.attack = value\n    } else if (property === 'synthEnvelopeDecay') {\n      bassSynth.envelope.decay = value\n      bassSettings.synth.envelope.decay = value\n    } else if (property === 'synthEnvelopeSustain') {\n      bassSynth.envelope.sustain = value\n      bassSettings.synth.envelope.sustain = value\n    } else if (property === 'synthEnvelopeRelease') {\n      bassSynth.envelope.release = value\n      bassSettings.synth.envelope.release = value\n    } else if (property === 'synthVolume') {\n      bassSynth.volume.value = value\n      bassSettings.synth.volume = value\n    } else if (property === 'synthDetune') {\n      bassSynth.detune.value = value\n      bassSettings.synth.detune = value\n    } else if (property === 'synthPortamento') {\n      bassSynth.portamento = value\n      bassSettings.synth.portamento = value\n    } else if (property === 'synthPhase') {\n      bassSynth.oscillator.phase = value\n      bassSettings.synth.oscillator.phase = value\n    } else if (property === 'synthHarmonicity') {\n      bassSynth.oscillator.harmonicity.value = value\n      bassSettings.synth.oscillator.harmonicity = value\n    } else if (property === 'pingPongDelayWet') {\n      bassPingPongDelay.wet.value = value\n      bassSettings.pingPongDelay.wet = value\n    } else if (property === 'pingPongDelayDelayTime') {\n      bassPingPongDelay.delayTime.value = value\n      bassSettings.pingPongDelay.delayTime = value\n    } else if (property === 'pingPongDelayDelayMaxDelayTime') {\n      bassPingPongDelay.maxDelayTime = value\n      bassSettings.pingPongDelay.maxDelayTime = value\n    }\n\n    else if (property === 'autoFilterWet') {\n      bassAutoFilter.wet.value = value\n      bassSettings.autoFilter.wet = value\n    } else if (property === 'autoFilterFrequency') {\n      bassAutoFilter.frequency.value = value\n      bassSettings.autoFilter.frequency = value\n    } else if (property === 'autoFilterDepth') {\n      bassAutoFilter.depth.value = value\n      bassSettings.autoFilter.depth = value\n    } else if (property === 'autoFilterBaseFrequency') {\n      bassAutoFilter.baseFrequency = value\n      bassSettings.autoFilter.baseFrequency = value\n    } else if (property === 'autoFilterType') {\n      bassAutoFilter.type = value\n      bassSettings.autoFilter.type = value\n    }\n\n    else if (property === 'distortionWet') {\n      bassDistortion.wet.value = value\n      bassSettings.distortion.wet = value\n    } else if (property === 'distortionDistortion') {\n      bassDistortion.distortion = value\n      bassSettings.distortion.distortion = value\n    }\n\n    else if (property === 'tremoloWet') {\n      bassTremolo.wet.value = value\n      bassSettings.tremolo.wet = value\n    } else if (property === 'tremoloFrequency') {\n      bassTremolo.frequency.value = value\n      bassSettings.tremolo.frequency = value\n    } else if (property === 'tremoloDepth') {\n      bassTremolo.depth.value = value\n      bassSettings.tremolo.depth = value\n    } else if (property === 'tremoloSpread') {\n      bassTremolo.spread = value\n      bassSettings.tremolo.spread = value\n    }\n\n    else if (property === 'channelVolume') {\n      bassChannel.volume.value = value\n      bassSettings.channel.volume = value\n    } else if (property === 'channelMute') {\n      bassChannel.mute = value\n      bassSettings.channel.mute = value\n    }\n\n    this.setState({\n      bassSettings\n    })\n  }\n\n  handleMelodyValueChange = (property, value) => {\n    const { melodySettings } = this.state\n\n    if (property === 'synthType') {\n      melodySynth.oscillator.type = value\n      melodySettings.synth.oscillator.type = value\n    } else if (property === 'synthEnvelopeAttack') {\n      melodySynth.envelope.attack = value\n      melodySettings.synth.envelope.attack = value\n    } else if (property === 'synthEnvelopeDecay') {\n      melodySynth.envelope.decay = value\n      melodySettings.synth.envelope.decay = value\n    } else if (property === 'synthEnvelopeSustain') {\n      melodySynth.envelope.sustain = value\n      melodySettings.synth.envelope.sustain = value\n    } else if (property === 'synthEnvelopeRelease') {\n      melodySynth.envelope.release = value\n      melodySettings.synth.envelope.release = value\n    } else if (property === 'synthVolume') {\n      melodySynth.volume.value = value\n      melodySettings.synth.volume = value\n    } else if (property === 'synthDetune') {\n      melodySynth.detune.value = value\n      melodySettings.synth.detune = value\n    } else if (property === 'synthPortamento') {\n      melodySynth.portamento = value\n      melodySettings.synth.portamento = value\n    } else if (property === 'synthPhase') {\n      melodySynth.oscillator.phase = value\n      melodySettings.synth.oscillator.phase = value\n    } else if (property === 'synthHarmonicity') {\n      melodySynth.oscillator.harmonicity.value = value\n      melodySettings.synth.oscillator.harmonicity = value\n    } else if (property === 'pingPongDelayWet') {\n      melodyPingPongDelay.wet.value = value\n      melodySettings.pingPongDelay.wet = value\n    } else if (property === 'pingPongDelayDelayTime') {\n      melodyPingPongDelay.delayTime.value = value\n      melodySettings.pingPongDelay.delayTime = value\n    } else if (property === 'pingPongDelayDelayMaxDelayTime') {\n      melodyPingPongDelay.maxDelayTime = value\n      melodySettings.pingPongDelay.maxDelayTime = value\n    }\n\n    else if (property === 'chorusWet') {\n      melodyChorus.wet.value = value\n      melodySettings.chorus.wet = value\n    } else if (property === 'chorusFrequency') {\n      melodyChorus.frequency.value = value\n      melodySettings.chorus.frequency = value\n    } else if (property === 'chorusDelayTime') {\n      melodyChorus.delayTime = value\n      melodySettings.chorus.delayTime = value\n    } else if (property === 'chorusSpread') {\n      melodyChorus.spread = value\n      melodySettings.chorus.spread = value\n    } else if (property === 'chorusType') {\n      melodyChorus.type = value\n      melodySettings.chorus.type = value\n    }\n\n    else if (property === 'distortionWet') {\n      melodyDistortion.wet.value = value\n      melodySettings.distortion.wet = value\n    } else if (property === 'distortionDistortion') {\n      melodyDistortion.distortion = value\n      melodySettings.distortion.distortion = value\n    }\n\n\n    else if (property === 'channelVolume') {\n      melodyChannel.volume.value = value\n      melodySettings.channel.volume = value\n    } else if (property === 'channelMute') {\n      melodyChannel.mute = value\n      melodySettings.channel.mute = value\n    }\n\n    this.setState({\n      melodySettings\n    })\n  }\n\n  handleDrumsValueChange = (property, value) => {\n    const { drumsSettings } = this.state\n\n    if (property === 'channelVolume') {\n      samplerChannel.volume.value = value\n      drumsSettings.channel.volume = value\n    } else if (property === 'channelMute') {\n      samplerChannel.mute = value\n      drumsSettings.channel.mute = value\n    }\n\n    this.setState({\n      drumsSettings\n    })\n  }\n\n  handleDrums2ValueChange = (property, value) => {\n    const { drumsSettings2 } = this.state\n\n    if (property === 'channelVolume') {\n      samplerChannel2.volume.value = value\n      drumsSettings2.channel.volume = value\n    } else if (property === 'channelMute') {\n      samplerChannel2.mute = value\n      drumsSettings2.channel.mute = value\n    }\n\n    this.setState({\n      drumsSettings2\n    })\n  }\n\n  render() {\n    const { bassSettings, melodySettings, drumsSettings, drumsSettings2 } = this.state\n\n    return (\n      <div className=\"Container\">\n\n        <div className=\"first\">\n          <SC_Button\n            text=\"FM Start\"\n            handleClick={this.handleStart}\n          />\n          <div className=\"lights\">\n            <div className=\"\"></div>\n            <div className=\"\"></div>\n            <div className=\"\"></div>\n            <div className=\"\"></div>\n            <div className=\"\"></div>\n            <div className=\"\"></div>\n            <div className=\"\"></div>\n            <div className=\"\"></div>\n            <div className=\"\"></div>\n            <div className=\"\"></div>\n            <div className=\"\"></div>\n            <div className=\"\"></div>\n            <div className=\"\"></div>\n            <div className=\"\"></div>\n            <div className=\"\"></div>\n            <div className=\"\"></div>\n          </div>\n\n        </div>\n\n        <div className=\"block melodyblock\">\n          <div className=\"blocktitle\">\n            <h1>Main Melody</h1>\n          </div>\n\n          <div className=\"column\">\n            <ToneSynth\n              settings={melodySettings}\n              handleValueChange={this.handleMelodyValueChange}\n            />\n          </div>\n          <div className=\"column\">\n            <Chorus\n              settings={melodySettings}\n              handleValueChange={this.handleMelodyValueChange}\n            />\n            <Delay\n              settings={melodySettings}\n              handleValueChange={this.handleMelodyValueChange}\n            />\n          </div>\n          <div className=\"column\">\n            <Channel\n              settings={melodySettings}\n              handleValueChange={this.handleMelodyValueChange}\n            />\n            <Distortion\n              settings={melodySettings}\n              handleValueChange={this.handleMelodyValueChange}\n            />\n          </div>\n        </div>\n\n        <div className=\"block bassblock\">\n          <div className=\"blocktitle\">\n            <h1>Bass</h1>\n          </div>\n          <div className=\"column\">\n            <ToneSynth\n              settings={bassSettings}\n              handleValueChange={this.handleBassValueChange}\n            />\n          </div>\n          <div className=\"column\">\n\n            <Delay\n              settings={bassSettings}\n              handleValueChange={this.handleBassValueChange}\n            />\n            <Distortion\n              settings={bassSettings}\n              handleValueChange={this.handleBassValueChange}\n            />\n            <AutoFilter\n              settings={bassSettings}\n              handleValueChange={this.handleBassValueChange}\n            />\n          </div>\n          <div className=\"column\">\n            <Channel\n              settings={bassSettings}\n              handleValueChange={this.handleBassValueChange}\n            />\n            <Tremolo\n              settings={bassSettings}\n              handleValueChange={this.handleBassValueChange}\n            />\n          </div>\n\n\n        </div>\n\n        <div className=\"block drumsblock\">\n          <h1>Drums</h1>\n          <Channel\n            settings={drumsSettings}\n            handleValueChange={this.handleDrumsValueChange}\n          />\n        </div>\n\n        <div className=\"block drumsblock\">\n          <h1>Drums2</h1>\n          <Channel\n            settings={drumsSettings2}\n            handleValueChange={this.handleDrums2ValueChange}\n          />\n        </div>\n\n      </div>\n    )\n  }\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;AAAA,OAAO,KAAKA,IAAZ,MAAsB,MAAtB;AACA,OAAOC,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AAEA,OAAO,KAAKC,YAAZ,MAA8B,iBAA9B;AACA,OAAO,KAAKC,cAAZ,MAAgC,mBAAhC;AACA,OAAO,KAAKC,aAAZ,MAA+B,kBAA/B;AACA,OAAO,KAAKC,cAAZ,MAAgC,mBAAhC;AAEA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,OAAOC,OAAP,MAAoB,uBAApB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,KAAP,MAAkB,qBAAlB;AACA,OAAOC,UAAP,MAAuB,0BAAvB;AACA,OAAOC,UAAP,MAAuB,0BAAvB;AACA,OAAOC,OAAP,MAAoB,uBAApB;AAEA,OAAOC,SAAP,MAAsB,wBAAtB;AACA,OAAOC,SAAP,MAAsB,wBAAtB;AAEA,IAAIC,SAAJ;AACA,IAAIC,iBAAJ;AACA,IAAIC,UAAJ;AACA,IAAIC,WAAJ;AACA,IAAIC,cAAJ;AACA,IAAIC,cAAJ;AACA,IAAIC,WAAJ;AAGA,IAAIC,WAAJ;AACA,IAAIC,YAAJ;AACA,IAAIC,mBAAJ;AACA,IAAIC,aAAJ;AACA,IAAIC,gBAAJ;AAEA,IAAIC,cAAJ;AACA,IAAIC,eAAJ;;IAEqBC,S;;;;;EACnB,mBAAYC,KAAZ,EAAmB;IAAA;;IAAA;;IACjB,0BAAMA,KAAN;;IADiB,MAWnBC,WAXmB,GAWL,YAAM;MAClB,kBAAwE,MAAKC,KAA7E;MAAA,IAAQ9B,YAAR,eAAQA,YAAR;MAAA,IAAsBC,cAAtB,eAAsBA,cAAtB;MAAA,IAAsCC,aAAtC,eAAsCA,aAAtC;MAAA,IAAqDC,cAArD,eAAqDA,cAArD,CADkB,CAGlB;MACA;;MACAU,SAAS,GAAG,IAAIhB,IAAI,CAACkC,KAAT,CAAe/B,YAAY,CAACgC,KAA5B,CAAZ;MAEAlB,iBAAiB,GAAG,IAAIjB,IAAI,CAACoC,aAAT,CAAuBjC,YAAY,CAACkC,aAApC,CAApB;MACAhB,cAAc,GAAG,IAAIrB,IAAI,CAACY,UAAT,CAAoBT,YAAY,CAACmC,UAAjC,EAA6CC,KAA7C,EAAjB;MACApB,WAAW,GAAG,IAAInB,IAAI,CAACa,OAAT,CAAiBV,YAAY,CAACqC,OAA9B,CAAd;MACApB,cAAc,GAAG,IAAIpB,IAAI,CAACW,UAAT,CAAoBR,YAAY,CAACsC,UAAjC,CAAjB;MACAnB,WAAW,GAAG,IAAItB,IAAI,CAACQ,OAAT,CAAiBL,YAAY,CAACuC,OAA9B,EAAuCC,aAAvC,EAAd;MAEA3B,SAAS,CAAC4B,KAAV,CAAgB3B,iBAAhB,EAAmCE,WAAnC,EAAgDC,cAAhD,EAAgEC,cAAhE,EAAgFC,WAAhF;MAEA,IAAMuB,QAAQ,GAAG,IAAI7C,IAAI,CAAC8C,IAAT,CAAc,UAACC,IAAD,EAAOC,IAAP,EAAgB;QAC7ChC,SAAS,CAACiC,oBAAV,CACED,IAAI,CAACE,QADP,EAEEF,IAAI,CAACG,QAFP,EAGEJ,IAHF,EAIEC,IAAI,CAACI,QAJP;MAMD,CAPgB,EAOdjD,YAAY,CAACkD,QAAb,CAAsBC,KAPR,EAOef,KAPf,CAOqB,CAPrB,CAAjB;MASAM,QAAQ,CAACU,OAAT,GAAmBpD,YAAY,CAACkD,QAAb,CAAsBF,QAAzC;MACAN,QAAQ,CAACW,IAAT,GAAgB,IAAhB,CAzBkB,CA0BlB;MACA;;MACAjC,WAAW,GAAG,IAAIvB,IAAI,CAACkC,KAAT,CAAe9B,cAAc,CAAC+B,KAA9B,CAAd;MACAX,YAAY,GAAG,IAAIxB,IAAI,CAACS,MAAT,CAAgBL,cAAc,CAACqD,MAA/B,EAAuClB,KAAvC,EAAf;MACAd,mBAAmB,GAAG,IAAIzB,IAAI,CAACoC,aAAT,CAAuBhC,cAAc,CAACiC,aAAtC,CAAtB;MACAV,gBAAgB,GAAG,IAAI3B,IAAI,CAACW,UAAT,CAAoBP,cAAc,CAACqC,UAAnC,CAAnB;MAEAf,aAAa,GAAG,IAAI1B,IAAI,CAACQ,OAAT,CAAiBJ,cAAc,CAACsC,OAAhC,EAAyCC,aAAzC,EAAhB;MAEApB,WAAW,CAACqB,KAAZ,CAAkBpB,YAAlB,EAAgCC,mBAAhC,EAAqDE,gBAArD,EAAuED,aAAvE;MAEA,IAAMgC,UAAU,GAAG,IAAI1D,IAAI,CAAC8C,IAAT,CAAc,UAACC,IAAD,EAAOC,IAAP,EAAgB;QAC/CzB,WAAW,CAAC0B,oBAAZ,CACED,IAAI,CAACE,QADP,EAEEF,IAAI,CAACG,QAFP,EAGEJ,IAHF,EAIEC,IAAI,CAACI,QAJP;MAMD,CAPkB,EAOhBhD,cAAc,CAACiD,QAAf,CAAwBC,KAPR,EAOef,KAPf,CAOqB,CAPrB,CAAnB;MASAmB,UAAU,CAACH,OAAX,GAAqBnD,cAAc,CAACiD,QAAf,CAAwBF,QAA7C;MACAO,UAAU,CAACF,IAAX,GAAkB,IAAlB,CA/CkB,CAgDlB;MACA;;MACA,IAAMG,OAAO,GAAG,IAAI3D,IAAI,CAAC4D,OAAT,CAAiB;QAC/BC,IAAI,EAAE;UACJC,EAAE,EAAE,kCADA;UAEJC,EAAE,EAAE;QAFA,CADyB;QAK/BC,OAAO,EAAE,gCALsB,CAM/B;QACA;QACA;;MAR+B,CAAjB,CAAhB;MAWApC,cAAc,GAAG,IAAI5B,IAAI,CAACQ,OAAT,CAAiBH,aAAa,CAACqC,OAA/B,EAAwCC,aAAxC,EAAjB;MAEAgB,OAAO,CAACf,KAAR,CAAchB,cAAd;MAEA,IAAMqC,SAAS,GAAG,IAAIjE,IAAI,CAAC8C,IAAT,CAAc,UAACC,IAAD,EAAOC,IAAP,EAAgB;QAC9CW,OAAO,CAACV,oBAAR,CACED,IAAI,CAACE,QADP,EAEEF,IAAI,CAACG,QAFP,EAGEJ,IAHF,EAIEC,IAAI,CAACI,QAJP;MAMD,CAPiB,EAOf/C,aAAa,CAACgD,QAAd,CAAuBC,KAPR,EAOef,KAPf,CAOqB,CAPrB,CAAlB;MASA0B,SAAS,CAACV,OAAV,GAAoBlD,aAAa,CAACgD,QAAd,CAAuBF,QAA3C;MACAc,SAAS,CAACT,IAAV,GAAiB,IAAjB;MAGA,IAAMU,QAAQ,GAAG,IAAIlE,IAAI,CAAC4D,OAAT,CAAiB;QAChCC,IAAI,EAAE;UACJC,EAAE,EAAE,iCADA;UAEJC,EAAE,EAAE;QAFA,CAD0B;QAKhCC,OAAO,EAAE,gCALuB,CAMhC;QACA;QACA;;MARgC,CAAjB,CAAjB;MAWAnC,eAAe,GAAG,IAAI7B,IAAI,CAACQ,OAAT,CAAiBF,cAAc,CAACoC,OAAhC,EAAyCC,aAAzC,EAAlB;MAEAuB,QAAQ,CAACtB,KAAT,CAAef,eAAf;MAEA,IAAMsC,UAAU,GAAG,IAAInE,IAAI,CAAC8C,IAAT,CAAc,UAACC,IAAD,EAAOC,IAAP,EAAgB;QAC/CkB,QAAQ,CAACjB,oBAAT,CACED,IAAI,CAACE,QADP,EAEEF,IAAI,CAACG,QAFP,EAGEJ,IAHF,EAIEC,IAAI,CAACI,QAJP;MAMD,CAPkB,EAOhB9C,cAAc,CAAC+C,QAAf,CAAwBC,KAPR,EAOef,KAPf,CAOqB,CAPrB,CAAnB;MASA4B,UAAU,CAACZ,OAAX,GAAqBjD,cAAc,CAAC+C,QAAf,CAAwBF,QAA7C;MACAgB,UAAU,CAACX,IAAX,GAAkB,IAAlB;MAEAxD,IAAI,CAACoE,SAAL,CAAe7B,KAAf;IACD,CArHkB;;IAAA,MAuHnB8B,qBAvHmB,GAuHK,UAACC,QAAD,EAAWC,KAAX,EAAqB;MAC3C,IAAQpE,YAAR,GAAyB,MAAK8B,KAA9B,CAAQ9B,YAAR;;MAEA,IAAImE,QAAQ,KAAK,WAAjB,EAA8B;QAC5BtD,SAAS,CAACwD,UAAV,CAAqBC,IAArB,GAA4BF,KAA5B;QACApE,YAAY,CAACgC,KAAb,CAAmBqC,UAAnB,CAA8BC,IAA9B,GAAqCF,KAArC;MACD,CAHD,MAGO,IAAID,QAAQ,KAAK,qBAAjB,EAAwC;QAC7CtD,SAAS,CAAC0D,QAAV,CAAmBC,MAAnB,GAA4BJ,KAA5B;QACApE,YAAY,CAACgC,KAAb,CAAmBuC,QAAnB,CAA4BC,MAA5B,GAAqCJ,KAArC;MACD,CAHM,MAGA,IAAID,QAAQ,KAAK,oBAAjB,EAAuC;QAC5CtD,SAAS,CAAC0D,QAAV,CAAmBE,KAAnB,GAA2BL,KAA3B;QACApE,YAAY,CAACgC,KAAb,CAAmBuC,QAAnB,CAA4BE,KAA5B,GAAoCL,KAApC;MACD,CAHM,MAGA,IAAID,QAAQ,KAAK,sBAAjB,EAAyC;QAC9CtD,SAAS,CAAC0D,QAAV,CAAmBG,OAAnB,GAA6BN,KAA7B;QACApE,YAAY,CAACgC,KAAb,CAAmBuC,QAAnB,CAA4BG,OAA5B,GAAsCN,KAAtC;MACD,CAHM,MAGA,IAAID,QAAQ,KAAK,sBAAjB,EAAyC;QAC9CtD,SAAS,CAAC0D,QAAV,CAAmBI,OAAnB,GAA6BP,KAA7B;QACApE,YAAY,CAACgC,KAAb,CAAmBuC,QAAnB,CAA4BI,OAA5B,GAAsCP,KAAtC;MACD,CAHM,MAGA,IAAID,QAAQ,KAAK,aAAjB,EAAgC;QACrCtD,SAAS,CAAC+D,MAAV,CAAiBR,KAAjB,GAAyBA,KAAzB;QACApE,YAAY,CAACgC,KAAb,CAAmB4C,MAAnB,GAA4BR,KAA5B;MACD,CAHM,MAGA,IAAID,QAAQ,KAAK,aAAjB,EAAgC;QACrCtD,SAAS,CAACgE,MAAV,CAAiBT,KAAjB,GAAyBA,KAAzB;QACApE,YAAY,CAACgC,KAAb,CAAmB6C,MAAnB,GAA4BT,KAA5B;MACD,CAHM,MAGA,IAAID,QAAQ,KAAK,iBAAjB,EAAoC;QACzCtD,SAAS,CAACiE,UAAV,GAAuBV,KAAvB;QACApE,YAAY,CAACgC,KAAb,CAAmB8C,UAAnB,GAAgCV,KAAhC;MACD,CAHM,MAGA,IAAID,QAAQ,KAAK,YAAjB,EAA+B;QACpCtD,SAAS,CAACwD,UAAV,CAAqBU,KAArB,GAA6BX,KAA7B;QACApE,YAAY,CAACgC,KAAb,CAAmBqC,UAAnB,CAA8BU,KAA9B,GAAsCX,KAAtC;MACD,CAHM,MAGA,IAAID,QAAQ,KAAK,kBAAjB,EAAqC;QAC1CtD,SAAS,CAACwD,UAAV,CAAqBW,WAArB,CAAiCZ,KAAjC,GAAyCA,KAAzC;QACApE,YAAY,CAACgC,KAAb,CAAmBqC,UAAnB,CAA8BW,WAA9B,GAA4CZ,KAA5C;MACD,CAHM,MAGA,IAAID,QAAQ,KAAK,kBAAjB,EAAqC;QAC1CrD,iBAAiB,CAACmE,GAAlB,CAAsBb,KAAtB,GAA8BA,KAA9B;QACApE,YAAY,CAACkC,aAAb,CAA2B+C,GAA3B,GAAiCb,KAAjC;MACD,CAHM,MAGA,IAAID,QAAQ,KAAK,wBAAjB,EAA2C;QAChDrD,iBAAiB,CAACoE,SAAlB,CAA4Bd,KAA5B,GAAoCA,KAApC;QACApE,YAAY,CAACkC,aAAb,CAA2BgD,SAA3B,GAAuCd,KAAvC;MACD,CAHM,MAGA,IAAID,QAAQ,KAAK,gCAAjB,EAAmD;QACxDrD,iBAAiB,CAACqE,YAAlB,GAAiCf,KAAjC;QACApE,YAAY,CAACkC,aAAb,CAA2BiD,YAA3B,GAA0Cf,KAA1C;MACD,CAHM,MAKF,IAAID,QAAQ,KAAK,eAAjB,EAAkC;QACrCjD,cAAc,CAAC+D,GAAf,CAAmBb,KAAnB,GAA2BA,KAA3B;QACApE,YAAY,CAACmC,UAAb,CAAwB8C,GAAxB,GAA8Bb,KAA9B;MACD,CAHI,MAGE,IAAID,QAAQ,KAAK,qBAAjB,EAAwC;QAC7CjD,cAAc,CAACkE,SAAf,CAAyBhB,KAAzB,GAAiCA,KAAjC;QACApE,YAAY,CAACmC,UAAb,CAAwBiD,SAAxB,GAAoChB,KAApC;MACD,CAHM,MAGA,IAAID,QAAQ,KAAK,iBAAjB,EAAoC;QACzCjD,cAAc,CAACmE,KAAf,CAAqBjB,KAArB,GAA6BA,KAA7B;QACApE,YAAY,CAACmC,UAAb,CAAwBkD,KAAxB,GAAgCjB,KAAhC;MACD,CAHM,MAGA,IAAID,QAAQ,KAAK,yBAAjB,EAA4C;QACjDjD,cAAc,CAACoE,aAAf,GAA+BlB,KAA/B;QACApE,YAAY,CAACmC,UAAb,CAAwBmD,aAAxB,GAAwClB,KAAxC;MACD,CAHM,MAGA,IAAID,QAAQ,KAAK,gBAAjB,EAAmC;QACxCjD,cAAc,CAACoD,IAAf,GAAsBF,KAAtB;QACApE,YAAY,CAACmC,UAAb,CAAwBmC,IAAxB,GAA+BF,KAA/B;MACD,CAHM,MAKF,IAAID,QAAQ,KAAK,eAAjB,EAAkC;QACrClD,cAAc,CAACgE,GAAf,CAAmBb,KAAnB,GAA2BA,KAA3B;QACApE,YAAY,CAACsC,UAAb,CAAwB2C,GAAxB,GAA8Bb,KAA9B;MACD,CAHI,MAGE,IAAID,QAAQ,KAAK,sBAAjB,EAAyC;QAC9ClD,cAAc,CAACqB,UAAf,GAA4B8B,KAA5B;QACApE,YAAY,CAACsC,UAAb,CAAwBA,UAAxB,GAAqC8B,KAArC;MACD,CAHM,MAKF,IAAID,QAAQ,KAAK,YAAjB,EAA+B;QAClCnD,WAAW,CAACiE,GAAZ,CAAgBb,KAAhB,GAAwBA,KAAxB;QACApE,YAAY,CAACqC,OAAb,CAAqB4C,GAArB,GAA2Bb,KAA3B;MACD,CAHI,MAGE,IAAID,QAAQ,KAAK,kBAAjB,EAAqC;QAC1CnD,WAAW,CAACoE,SAAZ,CAAsBhB,KAAtB,GAA8BA,KAA9B;QACApE,YAAY,CAACqC,OAAb,CAAqB+C,SAArB,GAAiChB,KAAjC;MACD,CAHM,MAGA,IAAID,QAAQ,KAAK,cAAjB,EAAiC;QACtCnD,WAAW,CAACqE,KAAZ,CAAkBjB,KAAlB,GAA0BA,KAA1B;QACApE,YAAY,CAACqC,OAAb,CAAqBgD,KAArB,GAA6BjB,KAA7B;MACD,CAHM,MAGA,IAAID,QAAQ,KAAK,eAAjB,EAAkC;QACvCnD,WAAW,CAACuE,MAAZ,GAAqBnB,KAArB;QACApE,YAAY,CAACqC,OAAb,CAAqBkD,MAArB,GAA8BnB,KAA9B;MACD,CAHM,MAKF,IAAID,QAAQ,KAAK,eAAjB,EAAkC;QACrChD,WAAW,CAACyD,MAAZ,CAAmBR,KAAnB,GAA2BA,KAA3B;QACApE,YAAY,CAACuC,OAAb,CAAqBqC,MAArB,GAA8BR,KAA9B;MACD,CAHI,MAGE,IAAID,QAAQ,KAAK,aAAjB,EAAgC;QACrChD,WAAW,CAACqE,IAAZ,GAAmBpB,KAAnB;QACApE,YAAY,CAACuC,OAAb,CAAqBiD,IAArB,GAA4BpB,KAA5B;MACD;;MAED,MAAKqB,QAAL,CAAc;QACZzF,YAAY,EAAZA;MADY,CAAd;IAGD,CArNkB;;IAAA,MAuNnB0F,uBAvNmB,GAuNO,UAACvB,QAAD,EAAWC,KAAX,EAAqB;MAC7C,IAAQnE,cAAR,GAA2B,MAAK6B,KAAhC,CAAQ7B,cAAR;;MAEA,IAAIkE,QAAQ,KAAK,WAAjB,EAA8B;QAC5B/C,WAAW,CAACiD,UAAZ,CAAuBC,IAAvB,GAA8BF,KAA9B;QACAnE,cAAc,CAAC+B,KAAf,CAAqBqC,UAArB,CAAgCC,IAAhC,GAAuCF,KAAvC;MACD,CAHD,MAGO,IAAID,QAAQ,KAAK,qBAAjB,EAAwC;QAC7C/C,WAAW,CAACmD,QAAZ,CAAqBC,MAArB,GAA8BJ,KAA9B;QACAnE,cAAc,CAAC+B,KAAf,CAAqBuC,QAArB,CAA8BC,MAA9B,GAAuCJ,KAAvC;MACD,CAHM,MAGA,IAAID,QAAQ,KAAK,oBAAjB,EAAuC;QAC5C/C,WAAW,CAACmD,QAAZ,CAAqBE,KAArB,GAA6BL,KAA7B;QACAnE,cAAc,CAAC+B,KAAf,CAAqBuC,QAArB,CAA8BE,KAA9B,GAAsCL,KAAtC;MACD,CAHM,MAGA,IAAID,QAAQ,KAAK,sBAAjB,EAAyC;QAC9C/C,WAAW,CAACmD,QAAZ,CAAqBG,OAArB,GAA+BN,KAA/B;QACAnE,cAAc,CAAC+B,KAAf,CAAqBuC,QAArB,CAA8BG,OAA9B,GAAwCN,KAAxC;MACD,CAHM,MAGA,IAAID,QAAQ,KAAK,sBAAjB,EAAyC;QAC9C/C,WAAW,CAACmD,QAAZ,CAAqBI,OAArB,GAA+BP,KAA/B;QACAnE,cAAc,CAAC+B,KAAf,CAAqBuC,QAArB,CAA8BI,OAA9B,GAAwCP,KAAxC;MACD,CAHM,MAGA,IAAID,QAAQ,KAAK,aAAjB,EAAgC;QACrC/C,WAAW,CAACwD,MAAZ,CAAmBR,KAAnB,GAA2BA,KAA3B;QACAnE,cAAc,CAAC+B,KAAf,CAAqB4C,MAArB,GAA8BR,KAA9B;MACD,CAHM,MAGA,IAAID,QAAQ,KAAK,aAAjB,EAAgC;QACrC/C,WAAW,CAACyD,MAAZ,CAAmBT,KAAnB,GAA2BA,KAA3B;QACAnE,cAAc,CAAC+B,KAAf,CAAqB6C,MAArB,GAA8BT,KAA9B;MACD,CAHM,MAGA,IAAID,QAAQ,KAAK,iBAAjB,EAAoC;QACzC/C,WAAW,CAAC0D,UAAZ,GAAyBV,KAAzB;QACAnE,cAAc,CAAC+B,KAAf,CAAqB8C,UAArB,GAAkCV,KAAlC;MACD,CAHM,MAGA,IAAID,QAAQ,KAAK,YAAjB,EAA+B;QACpC/C,WAAW,CAACiD,UAAZ,CAAuBU,KAAvB,GAA+BX,KAA/B;QACAnE,cAAc,CAAC+B,KAAf,CAAqBqC,UAArB,CAAgCU,KAAhC,GAAwCX,KAAxC;MACD,CAHM,MAGA,IAAID,QAAQ,KAAK,kBAAjB,EAAqC;QAC1C/C,WAAW,CAACiD,UAAZ,CAAuBW,WAAvB,CAAmCZ,KAAnC,GAA2CA,KAA3C;QACAnE,cAAc,CAAC+B,KAAf,CAAqBqC,UAArB,CAAgCW,WAAhC,GAA8CZ,KAA9C;MACD,CAHM,MAGA,IAAID,QAAQ,KAAK,kBAAjB,EAAqC;QAC1C7C,mBAAmB,CAAC2D,GAApB,CAAwBb,KAAxB,GAAgCA,KAAhC;QACAnE,cAAc,CAACiC,aAAf,CAA6B+C,GAA7B,GAAmCb,KAAnC;MACD,CAHM,MAGA,IAAID,QAAQ,KAAK,wBAAjB,EAA2C;QAChD7C,mBAAmB,CAAC4D,SAApB,CAA8Bd,KAA9B,GAAsCA,KAAtC;QACAnE,cAAc,CAACiC,aAAf,CAA6BgD,SAA7B,GAAyCd,KAAzC;MACD,CAHM,MAGA,IAAID,QAAQ,KAAK,gCAAjB,EAAmD;QACxD7C,mBAAmB,CAAC6D,YAApB,GAAmCf,KAAnC;QACAnE,cAAc,CAACiC,aAAf,CAA6BiD,YAA7B,GAA4Cf,KAA5C;MACD,CAHM,MAKF,IAAID,QAAQ,KAAK,WAAjB,EAA8B;QACjC9C,YAAY,CAAC4D,GAAb,CAAiBb,KAAjB,GAAyBA,KAAzB;QACAnE,cAAc,CAACqD,MAAf,CAAsB2B,GAAtB,GAA4Bb,KAA5B;MACD,CAHI,MAGE,IAAID,QAAQ,KAAK,iBAAjB,EAAoC;QACzC9C,YAAY,CAAC+D,SAAb,CAAuBhB,KAAvB,GAA+BA,KAA/B;QACAnE,cAAc,CAACqD,MAAf,CAAsB8B,SAAtB,GAAkChB,KAAlC;MACD,CAHM,MAGA,IAAID,QAAQ,KAAK,iBAAjB,EAAoC;QACzC9C,YAAY,CAAC6D,SAAb,GAAyBd,KAAzB;QACAnE,cAAc,CAACqD,MAAf,CAAsB4B,SAAtB,GAAkCd,KAAlC;MACD,CAHM,MAGA,IAAID,QAAQ,KAAK,cAAjB,EAAiC;QACtC9C,YAAY,CAACkE,MAAb,GAAsBnB,KAAtB;QACAnE,cAAc,CAACqD,MAAf,CAAsBiC,MAAtB,GAA+BnB,KAA/B;MACD,CAHM,MAGA,IAAID,QAAQ,KAAK,YAAjB,EAA+B;QACpC9C,YAAY,CAACiD,IAAb,GAAoBF,KAApB;QACAnE,cAAc,CAACqD,MAAf,CAAsBgB,IAAtB,GAA6BF,KAA7B;MACD,CAHM,MAKF,IAAID,QAAQ,KAAK,eAAjB,EAAkC;QACrC3C,gBAAgB,CAACyD,GAAjB,CAAqBb,KAArB,GAA6BA,KAA7B;QACAnE,cAAc,CAACqC,UAAf,CAA0B2C,GAA1B,GAAgCb,KAAhC;MACD,CAHI,MAGE,IAAID,QAAQ,KAAK,sBAAjB,EAAyC;QAC9C3C,gBAAgB,CAACc,UAAjB,GAA8B8B,KAA9B;QACAnE,cAAc,CAACqC,UAAf,CAA0BA,UAA1B,GAAuC8B,KAAvC;MACD,CAHM,MAMF,IAAID,QAAQ,KAAK,eAAjB,EAAkC;QACrC5C,aAAa,CAACqD,MAAd,CAAqBR,KAArB,GAA6BA,KAA7B;QACAnE,cAAc,CAACsC,OAAf,CAAuBqC,MAAvB,GAAgCR,KAAhC;MACD,CAHI,MAGE,IAAID,QAAQ,KAAK,aAAjB,EAAgC;QACrC5C,aAAa,CAACiE,IAAd,GAAqBpB,KAArB;QACAnE,cAAc,CAACsC,OAAf,CAAuBiD,IAAvB,GAA8BpB,KAA9B;MACD;;MAED,MAAKqB,QAAL,CAAc;QACZxF,cAAc,EAAdA;MADY,CAAd;IAGD,CAxSkB;;IAAA,MA0SnB0F,sBA1SmB,GA0SM,UAACxB,QAAD,EAAWC,KAAX,EAAqB;MAC5C,IAAQlE,aAAR,GAA0B,MAAK4B,KAA/B,CAAQ5B,aAAR;;MAEA,IAAIiE,QAAQ,KAAK,eAAjB,EAAkC;QAChC1C,cAAc,CAACmD,MAAf,CAAsBR,KAAtB,GAA8BA,KAA9B;QACAlE,aAAa,CAACqC,OAAd,CAAsBqC,MAAtB,GAA+BR,KAA/B;MACD,CAHD,MAGO,IAAID,QAAQ,KAAK,aAAjB,EAAgC;QACrC1C,cAAc,CAAC+D,IAAf,GAAsBpB,KAAtB;QACAlE,aAAa,CAACqC,OAAd,CAAsBiD,IAAtB,GAA6BpB,KAA7B;MACD;;MAED,MAAKqB,QAAL,CAAc;QACZvF,aAAa,EAAbA;MADY,CAAd;IAGD,CAxTkB;;IAAA,MA0TnB0F,uBA1TmB,GA0TO,UAACzB,QAAD,EAAWC,KAAX,EAAqB;MAC7C,IAAQjE,cAAR,GAA2B,MAAK2B,KAAhC,CAAQ3B,cAAR;;MAEA,IAAIgE,QAAQ,KAAK,eAAjB,EAAkC;QAChCzC,eAAe,CAACkD,MAAhB,CAAuBR,KAAvB,GAA+BA,KAA/B;QACAjE,cAAc,CAACoC,OAAf,CAAuBqC,MAAvB,GAAgCR,KAAhC;MACD,CAHD,MAGO,IAAID,QAAQ,KAAK,aAAjB,EAAgC;QACrCzC,eAAe,CAAC8D,IAAhB,GAAuBpB,KAAvB;QACAjE,cAAc,CAACoC,OAAf,CAAuBiD,IAAvB,GAA8BpB,KAA9B;MACD;;MAED,MAAKqB,QAAL,CAAc;QACZtF,cAAc,EAAdA;MADY,CAAd;IAGD,CAxUkB;;IAGjB,MAAK2B,KAAL,GAAa;MACX9B,YAAY,EAAZA,YADW;MAEXC,cAAc,EAAdA,cAFW;MAGXC,aAAa,EAAbA,aAHW;MAIXC,cAAc,EAAdA;IAJW,CAAb;IAHiB;EASlB;;;;WAiUD,kBAAS;MACP,mBAAwE,KAAK2B,KAA7E;MAAA,IAAQ9B,YAAR,gBAAQA,YAAR;MAAA,IAAsBC,cAAtB,gBAAsBA,cAAtB;MAAA,IAAsCC,aAAtC,gBAAsCA,aAAtC;MAAA,IAAqDC,cAArD,gBAAqDA,cAArD;MAEA,oBACE;QAAK,SAAS,EAAC,WAAf;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,gBAEE;QAAK,SAAS,EAAC,OAAf;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,gBACE,oBAAC,SAAD;QACE,IAAI,EAAC,UADP;QAEE,WAAW,EAAE,KAAK0B,WAFpB;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,EADF,eAKE;QAAK,SAAS,EAAC,QAAf;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,gBACE;QAAK,SAAS,EAAC,EAAf;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,EADF,eAEE;QAAK,SAAS,EAAC,EAAf;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,EAFF,eAGE;QAAK,SAAS,EAAC,EAAf;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,EAHF,eAIE;QAAK,SAAS,EAAC,EAAf;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,EAJF,eAKE;QAAK,SAAS,EAAC,EAAf;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,EALF,eAME;QAAK,SAAS,EAAC,EAAf;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,EANF,eAOE;QAAK,SAAS,EAAC,EAAf;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,EAPF,eAQE;QAAK,SAAS,EAAC,EAAf;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,EARF,eASE;QAAK,SAAS,EAAC,EAAf;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,EATF,eAUE;QAAK,SAAS,EAAC,EAAf;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,EAVF,eAWE;QAAK,SAAS,EAAC,EAAf;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,EAXF,eAYE;QAAK,SAAS,EAAC,EAAf;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,EAZF,eAaE;QAAK,SAAS,EAAC,EAAf;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,EAbF,eAcE;QAAK,SAAS,EAAC,EAAf;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,EAdF,eAeE;QAAK,SAAS,EAAC,EAAf;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,EAfF,eAgBE;QAAK,SAAS,EAAC,EAAf;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,EAhBF,CALF,CAFF,eA4BE;QAAK,SAAS,EAAC,mBAAf;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,gBACE;QAAK,SAAS,EAAC,YAAf;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,gBACE;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,iBADF,CADF,eAKE;QAAK,SAAS,EAAC,QAAf;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,gBACE,oBAAC,SAAD;QACE,QAAQ,EAAE5B,cADZ;QAEE,iBAAiB,EAAE,KAAKyF,uBAF1B;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,EADF,CALF,eAWE;QAAK,SAAS,EAAC,QAAf;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,gBACE,oBAAC,MAAD;QACE,QAAQ,EAAEzF,cADZ;QAEE,iBAAiB,EAAE,KAAKyF,uBAF1B;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,EADF,eAKE,oBAAC,KAAD;QACE,QAAQ,EAAEzF,cADZ;QAEE,iBAAiB,EAAE,KAAKyF,uBAF1B;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,EALF,CAXF,eAqBE;QAAK,SAAS,EAAC,QAAf;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,gBACE,oBAAC,OAAD;QACE,QAAQ,EAAEzF,cADZ;QAEE,iBAAiB,EAAE,KAAKyF,uBAF1B;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,EADF,eAKE,oBAAC,UAAD;QACE,QAAQ,EAAEzF,cADZ;QAEE,iBAAiB,EAAE,KAAKyF,uBAF1B;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,EALF,CArBF,CA5BF,eA6DE;QAAK,SAAS,EAAC,iBAAf;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,gBACE;QAAK,SAAS,EAAC,YAAf;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,gBACE;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,UADF,CADF,eAIE;QAAK,SAAS,EAAC,QAAf;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,gBACE,oBAAC,SAAD;QACE,QAAQ,EAAE1F,YADZ;QAEE,iBAAiB,EAAE,KAAKkE,qBAF1B;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,EADF,CAJF,eAUE;QAAK,SAAS,EAAC,QAAf;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,gBAEE,oBAAC,KAAD;QACE,QAAQ,EAAElE,YADZ;QAEE,iBAAiB,EAAE,KAAKkE,qBAF1B;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,EAFF,eAME,oBAAC,UAAD;QACE,QAAQ,EAAElE,YADZ;QAEE,iBAAiB,EAAE,KAAKkE,qBAF1B;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,EANF,eAUE,oBAAC,UAAD;QACE,QAAQ,EAAElE,YADZ;QAEE,iBAAiB,EAAE,KAAKkE,qBAF1B;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,EAVF,CAVF,eAyBE;QAAK,SAAS,EAAC,QAAf;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,gBACE,oBAAC,OAAD;QACE,QAAQ,EAAElE,YADZ;QAEE,iBAAiB,EAAE,KAAKkE,qBAF1B;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,EADF,eAKE,oBAAC,OAAD;QACE,QAAQ,EAAElE,YADZ;QAEE,iBAAiB,EAAE,KAAKkE,qBAF1B;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,EALF,CAzBF,CA7DF,eAoGE;QAAK,SAAS,EAAC,kBAAf;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,gBACE;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,WADF,eAEE,oBAAC,OAAD;QACE,QAAQ,EAAEhE,aADZ;QAEE,iBAAiB,EAAE,KAAKyF,sBAF1B;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,EAFF,CApGF,eA4GE;QAAK,SAAS,EAAC,kBAAf;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,gBACE;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,YADF,eAEE,oBAAC,OAAD;QACE,QAAQ,EAAExF,cADZ;QAEE,iBAAiB,EAAE,KAAKyF,uBAF1B;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,EAFF,CA5GF,CADF;IAuHD;;;;EArcoC7F,S;;SAAlB4B,S"},"metadata":{},"sourceType":"module"}